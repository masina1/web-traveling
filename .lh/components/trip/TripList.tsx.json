{
    "sourceFile": "components/trip/TripList.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1752432589178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752433723701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n import { useAuth } from '@/lib/auth-context';\r\n import { getUserTrips, deleteTrip } from '@/lib/trip-service';\r\n import { Trip } from '@/types';\r\n import { format } from 'date-fns';\r\n+import Link from 'next/link';\r\n \r\n interface TripListProps {\r\n   onEditTrip?: (trip: Trip) => void;\r\n   onCreateTrip?: () => void;\r\n"
                },
                {
                    "date": 1752433733107,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,8 +161,15 @@\n               </p>\r\n             )}\r\n             \r\n             <div className=\"flex gap-2\">\r\n+              <Link\r\n+                href={`/trip/${trip.id}`}\r\n+                className=\"flex-1 btn-primary text-sm text-center\"\r\n+              >\r\n+                View\r\n+              </Link>\r\n+              \r\n               {onEditTrip && (\r\n                 <button\r\n                   onClick={() => onEditTrip(trip)}\r\n                   className=\"flex-1 btn-secondary text-sm\"\r\n"
                }
            ],
            "date": 1752432589178,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '@/lib/auth-context';\r\nimport { getUserTrips, deleteTrip } from '@/lib/trip-service';\r\nimport { Trip } from '@/types';\r\nimport { format } from 'date-fns';\r\n\r\ninterface TripListProps {\r\n  onEditTrip?: (trip: Trip) => void;\r\n  onCreateTrip?: () => void;\r\n  refreshTrigger?: number;\r\n}\r\n\r\nexport default function TripList({ onEditTrip, onCreateTrip, refreshTrigger }: TripListProps) {\r\n  const { user } = useAuth();\r\n  const [trips, setTrips] = useState<Trip[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [deletingId, setDeletingId] = useState<string | null>(null);\r\n\r\n  const fetchTrips = async () => {\r\n    if (!user) return;\r\n    \r\n    try {\r\n      setLoading(true);\r\n      const userTrips = await getUserTrips(user.uid);\r\n      setTrips(userTrips);\r\n    } catch (error: any) {\r\n      setError(error.message || 'Failed to fetch trips');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTrips();\r\n  }, [user, refreshTrigger]);\r\n\r\n  const handleDeleteTrip = async (tripId: string, tripName: string) => {\r\n    if (!confirm(`Are you sure you want to delete \"${tripName}\"? This action cannot be undone.`)) {\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setDeletingId(tripId);\r\n      await deleteTrip(tripId);\r\n      setTrips(prev => prev.filter(trip => trip.id !== tripId));\r\n    } catch (error: any) {\r\n      setError(error.message || 'Failed to delete trip');\r\n    } finally {\r\n      setDeletingId(null);\r\n    }\r\n  };\r\n\r\n  const formatDateRange = (startDate: string, endDate: string) => {\r\n    try {\r\n      const start = format(new Date(startDate), 'MMM d');\r\n      const end = format(new Date(endDate), 'MMM d, yyyy');\r\n      return `${start} - ${end}`;\r\n    } catch {\r\n      return 'Invalid date range';\r\n    }\r\n  };\r\n\r\n  const calculateDuration = (startDate: string, endDate: string) => {\r\n    try {\r\n      const start = new Date(startDate);\r\n      const end = new Date(endDate);\r\n      const diffTime = Math.abs(end.getTime() - start.getTime());\r\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n      return diffDays;\r\n    } catch {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"text-center py-8\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto\"></div>\r\n        <p className=\"mt-4 text-gray-600\">Loading your trips...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"text-center py-8\">\r\n        <div className=\"rounded-xl bg-red-50 p-4 mb-4\">\r\n          <div className=\"text-sm text-red-700\">{error}</div>\r\n        </div>\r\n        <button onClick={fetchTrips} className=\"btn-primary\">\r\n          Try Again\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (trips.length === 0) {\r\n    return (\r\n      <div className=\"text-center py-12\">\r\n        <div className=\"text-6xl mb-4\">üó∫Ô∏è</div>\r\n        <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">No trips yet</h3>\r\n        <p className=\"text-gray-600 mb-6\">Start planning your next adventure!</p>\r\n        {onCreateTrip && (\r\n          <button onClick={onCreateTrip} className=\"btn-primary\">\r\n            Create Your First Trip\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h2 className=\"text-2xl font-bold text-gray-900\">My Trips</h2>\r\n        {onCreateTrip && (\r\n          <button onClick={onCreateTrip} className=\"btn-primary\">\r\n            + New Trip\r\n          </button>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\r\n        {trips.map((trip) => (\r\n          <div key={trip.id} className=\"card hover:shadow-md transition-shadow\">\r\n            <div className=\"flex justify-between items-start mb-3\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 truncate\">\r\n                {trip.name}\r\n              </h3>\r\n              {trip.isPublic && (\r\n                <span className=\"bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full\">\r\n                  Public\r\n                </span>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"space-y-2 mb-4\">\r\n              <div className=\"flex items-center text-gray-600\">\r\n                <span className=\"text-lg mr-2\">üìç</span>\r\n                <span className=\"text-sm truncate\">{trip.location}</span>\r\n              </div>\r\n              \r\n              <div className=\"flex items-center text-gray-600\">\r\n                <span className=\"text-lg mr-2\">üìÖ</span>\r\n                <span className=\"text-sm\">{formatDateRange(trip.startDate, trip.endDate)}</span>\r\n              </div>\r\n              \r\n              <div className=\"flex items-center text-gray-600\">\r\n                <span className=\"text-lg mr-2\">‚è±Ô∏è</span>\r\n                <span className=\"text-sm\">{calculateDuration(trip.startDate, trip.endDate)} days</span>\r\n              </div>\r\n            </div>\r\n            \r\n            {trip.description && (\r\n              <p className=\"text-gray-600 text-sm mb-4 line-clamp-2\">\r\n                {trip.description}\r\n              </p>\r\n            )}\r\n            \r\n            <div className=\"flex gap-2\">\r\n              {onEditTrip && (\r\n                <button\r\n                  onClick={() => onEditTrip(trip)}\r\n                  className=\"flex-1 btn-secondary text-sm\"\r\n                >\r\n                  Edit\r\n                </button>\r\n              )}\r\n              \r\n              <button\r\n                onClick={() => handleDeleteTrip(trip.id, trip.name)}\r\n                disabled={deletingId === trip.id}\r\n                className=\"px-3 py-2 text-sm text-red-600 hover:text-red-700 hover:bg-red-50 rounded-xl transition-colors disabled:opacity-50\"\r\n              >\r\n                {deletingId === trip.id ? '...' : 'Delete'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n} "
        }
    ]
}