{
    "sourceFile": "components/trip/SmartRecommendations.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 36,
            "patches": [
                {
                    "date": 1752491349546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752491897642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -320,23 +320,8 @@\n   }\r\n \r\n   return (\r\n     <div className=\"p-4 border-t border-gray-200\">\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h3 className=\"text-lg font-semibold text-gray-900\">Smart Recommendations</h3>\r\n-        <div className=\"flex items-center space-x-2\">\r\n-          <select\r\n-            value={selectedCategory}\r\n-            onChange={(e) => setSelectedCategory(e.target.value)}\r\n-            className=\"text-sm border border-gray-300 rounded-lg px-2 py-1 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n-          >\r\n-            {categories.map(cat => (\r\n-              <option key={cat.value} value={cat.value}>{cat.label}</option>\r\n-            ))}\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n       {error && (\r\n         <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\r\n           <p className=\"text-red-700 text-sm\">{error}</p>\r\n         </div>\r\n@@ -355,51 +340,128 @@\n         </div>\r\n       )}\r\n \r\n       {!isLoading && filteredRecommendations.length > 0 && (\r\n-        <div className=\"grid grid-cols-1 gap-3\">\r\n-          {filteredRecommendations.map((rec) => (\r\n-            <div key={rec.id} className=\"bg-gray-50 rounded-lg p-3 hover:bg-gray-100 transition-colors\">\r\n+        <div className=\"space-y-4\">\r\n+          {/* Featured Recommendation */}\r\n+          {filteredRecommendations[0] && (\r\n+            <div className=\"bg-gray-50 rounded-lg p-4 hover:bg-gray-100 transition-colors\">\r\n               <div className=\"flex items-start justify-between\">\r\n-                <div className=\"flex-1 min-w-0\">\r\n-                  <div className=\"flex items-center space-x-2 mb-1\">\r\n-                    <h4 className=\"font-medium text-gray-900 truncate\">{rec.name}</h4>\r\n-                    {rec.source === 'curated' && (\r\n-                      <span className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 text-blue-800\">\r\n-                        Curated\r\n-                      </span>\r\n-                    )}\r\n-                    {rec.rating && (\r\n+                <div className=\"flex-1 min-w-0 mr-4\">\r\n+                  <div className=\"flex items-center space-x-2 mb-2\">\r\n+                    <div className=\"w-6 h-6 bg-green-500 rounded-full flex items-center justify-center flex-shrink-0\">\r\n+                      <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\r\n+                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n+                      </svg>\r\n+                    </div>\r\n+                    <h4 className=\"font-semibold text-gray-900\">{filteredRecommendations[0].name}</h4>\r\n+                  </div>\r\n+                  \r\n+                  <div className=\"text-sm text-gray-600 mb-3\">\r\n+                    {filteredRecommendations[0].description}\r\n+                  </div>\r\n+                  \r\n+                  <div className=\"flex items-center space-x-4\">\r\n+                    {filteredRecommendations[0].rating && (\r\n                       <div className=\"flex items-center\">\r\n-                        <svg className=\"w-3 h-3 text-yellow-400 fill-current\" viewBox=\"0 0 20 20\">\r\n+                        <svg className=\"w-4 h-4 text-yellow-400 fill-current\" viewBox=\"0 0 20 20\">\r\n                           <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n                         </svg>\r\n-                        <span className=\"ml-1 text-xs text-gray-600\">{rec.rating}</span>\r\n+                        <span className=\"ml-1 text-sm text-gray-600\">{filteredRecommendations[0].rating}</span>\r\n                       </div>\r\n                     )}\r\n+                    {filteredRecommendations[0].source === 'curated' && (\r\n+                      <span className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 text-blue-800\">\r\n+                        Curated\r\n+                      </span>\r\n+                    )}\r\n                   </div>\r\n-                  <p className=\"text-sm text-gray-600 mb-1\">{rec.address}</p>\r\n-                  <p className=\"text-xs text-gray-500\">{rec.description}</p>\r\n                 </div>\r\n-                <button\r\n-                  onClick={() => handleAddRecommendation(rec)}\r\n-                  className=\"ml-3 px-3 py-1 bg-primary-600 text-white text-sm rounded-lg hover:bg-primary-700 transition-colors flex-shrink-0\"\r\n-                >\r\n-                  Add\r\n-                </button>\r\n+                \r\n+                <div className=\"flex flex-col items-end space-y-2\">\r\n+                  {filteredRecommendations[0].photos && filteredRecommendations[0].photos.length > 0 && (\r\n+                    <img \r\n+                      src={filteredRecommendations[0].photos[0]} \r\n+                      alt={filteredRecommendations[0].name}\r\n+                      className=\"w-24 h-16 object-cover rounded-lg\"\r\n+                    />\r\n+                  )}\r\n+                  <button\r\n+                    onClick={() => handleAddRecommendation(filteredRecommendations[0])}\r\n+                    className=\"px-4 py-2 bg-primary-600 text-white text-sm rounded-lg hover:bg-primary-700 transition-colors\"\r\n+                  >\r\n+                    Add\r\n+                  </button>\r\n+                </div>\r\n               </div>\r\n-              \r\n-              {rec.photos && rec.photos.length > 0 && (\r\n-                <div className=\"mt-2\">\r\n-                  <img \r\n-                    src={rec.photos[0]} \r\n-                    alt={rec.name}\r\n-                    className=\"w-full h-24 object-cover rounded-lg\"\r\n-                  />\r\n+            </div>\r\n+          )}\r\n+\r\n+          {/* Category Filter */}\r\n+          <div className=\"flex items-center justify-between\">\r\n+            <h3 className=\"text-sm font-medium text-gray-700\">Recommended places</h3>\r\n+            <select\r\n+              value={selectedCategory}\r\n+              onChange={(e) => setSelectedCategory(e.target.value)}\r\n+              className=\"text-sm border border-gray-300 rounded-lg px-2 py-1 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n+            >\r\n+              {categories.map(cat => (\r\n+                <option key={cat.value} value={cat.value}>{cat.label}</option>\r\n+              ))}\r\n+            </select>\r\n+          </div>\r\n+\r\n+          {/* Horizontal Scrollable Cards */}\r\n+          {filteredRecommendations.length > 1 && (\r\n+            <div className=\"flex space-x-3 overflow-x-auto pb-2\">\r\n+              {filteredRecommendations.slice(1).map((rec) => (\r\n+                <div key={rec.id} className=\"flex-shrink-0 w-48 bg-white rounded-lg border border-gray-200 overflow-hidden hover:shadow-md transition-shadow\">\r\n+                  {rec.photos && rec.photos.length > 0 ? (\r\n+                    <img \r\n+                      src={rec.photos[0]} \r\n+                      alt={rec.name}\r\n+                      className=\"w-full h-24 object-cover\"\r\n+                    />\r\n+                  ) : (\r\n+                    <div className=\"w-full h-24 bg-gray-200 flex items-center justify-center\">\r\n+                      <svg className=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\r\n+                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n+                      </svg>\r\n+                    </div>\r\n+                  )}\r\n+                  \r\n+                  <div className=\"p-3\">\r\n+                    <div className=\"flex items-start justify-between\">\r\n+                      <div className=\"flex-1 min-w-0\">\r\n+                        <h4 className=\"font-medium text-gray-900 text-sm truncate\">{rec.name}</h4>\r\n+                        <p className=\"text-xs text-gray-500 mt-1 line-clamp-2\">{rec.description}</p>\r\n+                        \r\n+                        {rec.rating && (\r\n+                          <div className=\"flex items-center mt-1\">\r\n+                            <svg className=\"w-3 h-3 text-yellow-400 fill-current\" viewBox=\"0 0 20 20\">\r\n+                              <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n+                            </svg>\r\n+                            <span className=\"ml-1 text-xs text-gray-600\">{rec.rating}</span>\r\n+                          </div>\r\n+                        )}\r\n+                      </div>\r\n+                      \r\n+                      <button\r\n+                        onClick={() => handleAddRecommendation(rec)}\r\n+                        className=\"ml-2 w-6 h-6 bg-primary-600 text-white rounded-full flex items-center justify-center hover:bg-primary-700 transition-colors flex-shrink-0\"\r\n+                      >\r\n+                        <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n+                        </svg>\r\n+                      </button>\r\n+                    </div>\r\n+                  </div>\r\n                 </div>\r\n-              )}\r\n+              ))}\r\n             </div>\r\n-          ))}\r\n+          )}\r\n         </div>\r\n       )}\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1752492490600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,10 @@\n   photos?: string[];\r\n   description: string;\r\n   source: 'places' | 'curated';\r\n   placeId?: string;\r\n+  isCurated?: boolean; // Added for curated recommendations\r\n+  photo?: string; // Added for photo URL\r\n }\r\n \r\n // Curated recommendations based on location and context\r\n const CURATED_RECOMMENDATIONS = {\r\n@@ -203,8 +205,10 @@\n           curated.push({\r\n             id: `curated-${city}-${index}`,\r\n             ...rec,\r\n             source: 'curated',\r\n+            isCurated: true,\r\n+            photo: undefined, // No direct photo URL for curated\r\n           });\r\n         });\r\n       }\r\n     });\r\n@@ -254,8 +258,10 @@\n                   ) || [],\r\n                   description: `Popular ${place.types?.[0]?.replace(/_/g, ' ') || 'attraction'} near ${destination.locationName}`,\r\n                   source: 'places',\r\n                   placeId: place.place_id,\r\n+                  isCurated: false,\r\n+                  photo: place.photos?.[0]?.getUrl({ maxWidth: 300, maxHeight: 200 }),\r\n                 });\r\n               }\r\n             });\r\n           }\r\n@@ -313,156 +319,123 @@\n         <svg className=\"w-12 h-12 mx-auto mb-3 text-gray-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n           <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\r\n           <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n         </svg>\r\n-        <p className=\"text-sm\">Add some destinations to get smart recommendations</p>\r\n+        <p className=\"text-sm\">Add destinations to see smart recommendations</p>\r\n       </div>\r\n     );\r\n   }\r\n \r\n-  return (\r\n-    <div className=\"p-4 border-t border-gray-200\">\r\n-      {error && (\r\n-        <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\r\n-          <p className=\"text-red-700 text-sm\">{error}</p>\r\n-        </div>\r\n-      )}\r\n-\r\n-      {isLoading && (\r\n+  if (isLoading) {\r\n+    return (\r\n+      <div className=\"p-4\">\r\n         <div className=\"flex items-center justify-center py-8\">\r\n-          <div className=\"animate-spin rounded-full h-6 w-6 border-2 border-primary-600 border-t-transparent\"></div>\r\n+          <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-primary-600\"></div>\r\n           <span className=\"ml-2 text-sm text-gray-600\">Finding recommendations...</span>\r\n         </div>\r\n-      )}\r\n+      </div>\r\n+    );\r\n+  }\r\n \r\n-      {!isLoading && filteredRecommendations.length === 0 && !error && (\r\n-        <div className=\"text-center py-8 text-gray-500\">\r\n-          <p className=\"text-sm\">No recommendations found for this category</p>\r\n+  if (error) {\r\n+    return (\r\n+      <div className=\"p-4\">\r\n+        <div className=\"bg-red-50 border border-red-200 rounded-lg p-3\">\r\n+          <p className=\"text-sm text-red-600\">{error}</p>\r\n         </div>\r\n-      )}\r\n+      </div>\r\n+    );\r\n+  }\r\n \r\n-      {!isLoading && filteredRecommendations.length > 0 && (\r\n-        <div className=\"space-y-4\">\r\n-          {/* Featured Recommendation */}\r\n-          {filteredRecommendations[0] && (\r\n-            <div className=\"bg-gray-50 rounded-lg p-4 hover:bg-gray-100 transition-colors\">\r\n-              <div className=\"flex items-start justify-between\">\r\n-                <div className=\"flex-1 min-w-0 mr-4\">\r\n-                  <div className=\"flex items-center space-x-2 mb-2\">\r\n-                    <div className=\"w-6 h-6 bg-green-500 rounded-full flex items-center justify-center flex-shrink-0\">\r\n-                      <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\r\n-                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n-                      </svg>\r\n-                    </div>\r\n-                    <h4 className=\"font-semibold text-gray-900\">{filteredRecommendations[0].name}</h4>\r\n-                  </div>\r\n-                  \r\n-                  <div className=\"text-sm text-gray-600 mb-3\">\r\n-                    {filteredRecommendations[0].description}\r\n-                  </div>\r\n-                  \r\n-                  <div className=\"flex items-center space-x-4\">\r\n-                    {filteredRecommendations[0].rating && (\r\n-                      <div className=\"flex items-center\">\r\n-                        <svg className=\"w-4 h-4 text-yellow-400 fill-current\" viewBox=\"0 0 20 20\">\r\n-                          <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n-                        </svg>\r\n-                        <span className=\"ml-1 text-sm text-gray-600\">{filteredRecommendations[0].rating}</span>\r\n-                      </div>\r\n-                    )}\r\n-                    {filteredRecommendations[0].source === 'curated' && (\r\n-                      <span className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 text-blue-800\">\r\n-                        Curated\r\n-                      </span>\r\n-                    )}\r\n-                  </div>\r\n-                </div>\r\n-                \r\n-                <div className=\"flex flex-col items-end space-y-2\">\r\n-                  {filteredRecommendations[0].photos && filteredRecommendations[0].photos.length > 0 && (\r\n-                    <img \r\n-                      src={filteredRecommendations[0].photos[0]} \r\n-                      alt={filteredRecommendations[0].name}\r\n-                      className=\"w-24 h-16 object-cover rounded-lg\"\r\n-                    />\r\n-                  )}\r\n-                  <button\r\n-                    onClick={() => handleAddRecommendation(filteredRecommendations[0])}\r\n-                    className=\"px-4 py-2 bg-primary-600 text-white text-sm rounded-lg hover:bg-primary-700 transition-colors\"\r\n-                  >\r\n-                    Add\r\n-                  </button>\r\n-                </div>\r\n-              </div>\r\n-            </div>\r\n-          )}\r\n+  return (\r\n+    <div className=\"border-t border-gray-200 bg-white\">\r\n+      {/* Category Filter */}\r\n+      <div className=\"p-4 border-b border-gray-100\">\r\n+        <div className=\"flex items-center justify-between mb-3\">\r\n+          <h3 className=\"text-lg font-semibold text-gray-900\">Recommended places</h3>\r\n+          <select\r\n+            value={selectedCategory}\r\n+            onChange={(e) => setSelectedCategory(e.target.value)}\r\n+            className=\"text-sm border border-gray-300 rounded-md px-2 py-1 focus:ring-2 focus:ring-primary-500 focus:border-transparent\"\r\n+          >\r\n+            {categories.map(cat => (\r\n+              <option key={cat.value} value={cat.value}>{cat.label}</option>\r\n+            ))}\r\n+          </select>\r\n+        </div>\r\n+      </div>\r\n \r\n-          {/* Category Filter */}\r\n-          <div className=\"flex items-center justify-between\">\r\n-            <h3 className=\"text-sm font-medium text-gray-700\">Recommended places</h3>\r\n-            <select\r\n-              value={selectedCategory}\r\n-              onChange={(e) => setSelectedCategory(e.target.value)}\r\n-              className=\"text-sm border border-gray-300 rounded-lg px-2 py-1 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n-            >\r\n-              {categories.map(cat => (\r\n-                <option key={cat.value} value={cat.value}>{cat.label}</option>\r\n-              ))}\r\n-            </select>\r\n+      {/* Horizontal Scrollable Cards */}\r\n+      <div className=\"p-4\">\r\n+        {filteredRecommendations.length === 0 ? (\r\n+          <div className=\"text-center py-8 text-gray-500\">\r\n+            <p className=\"text-sm\">No recommendations found for this category.</p>\r\n           </div>\r\n-\r\n-          {/* Horizontal Scrollable Cards */}\r\n-          {filteredRecommendations.length > 1 && (\r\n-            <div className=\"flex space-x-3 overflow-x-auto pb-2\">\r\n-              {filteredRecommendations.slice(1).map((rec) => (\r\n-                <div key={rec.id} className=\"flex-shrink-0 w-48 bg-white rounded-lg border border-gray-200 overflow-hidden hover:shadow-md transition-shadow\">\r\n-                  {rec.photos && rec.photos.length > 0 ? (\r\n-                    <img \r\n-                      src={rec.photos[0]} \r\n+        ) : (\r\n+          <div className=\"flex space-x-3 overflow-x-auto pb-2\">\r\n+            {filteredRecommendations.map((rec) => (\r\n+              <div\r\n+                key={rec.id}\r\n+                className=\"flex-shrink-0 w-48 bg-white border border-gray-200 rounded-lg hover:shadow-md transition-shadow\"\r\n+              >\r\n+                {/* Image */}\r\n+                <div className=\"h-32 bg-gray-200 rounded-t-lg overflow-hidden\">\r\n\\ No newline at end of file\n+                  {rec.photo ? (\r\n+                    <img\r\n+                      src={rec.photo}\r\n                       alt={rec.name}\r\n-                      className=\"w-full h-24 object-cover\"\r\n+                      className=\"w-full h-full object-cover\"\r\n                     />\r\n                   ) : (\r\n-                    <div className=\"w-full h-24 bg-gray-200 flex items-center justify-center\">\r\n+                    <div className=\"w-full h-full flex items-center justify-center bg-gray-100\">\r\n                       <svg className=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                         <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\r\n                         <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                       </svg>\r\n                     </div>\r\n                   )}\r\n-                  \r\n-                  <div className=\"p-3\">\r\n-                    <div className=\"flex items-start justify-between\">\r\n-                      <div className=\"flex-1 min-w-0\">\r\n-                        <h4 className=\"font-medium text-gray-900 text-sm truncate\">{rec.name}</h4>\r\n-                        <p className=\"text-xs text-gray-500 mt-1 line-clamp-2\">{rec.description}</p>\r\n-                        \r\n-                        {rec.rating && (\r\n-                          <div className=\"flex items-center mt-1\">\r\n-                            <svg className=\"w-3 h-3 text-yellow-400 fill-current\" viewBox=\"0 0 20 20\">\r\n-                              <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n-                            </svg>\r\n-                            <span className=\"ml-1 text-xs text-gray-600\">{rec.rating}</span>\r\n-                          </div>\r\n-                        )}\r\n-                      </div>\r\n+                </div>\r\n+\r\n+                {/* Content */}\r\n+                <div className=\"p-3\">\r\n+                  <div className=\"flex items-start justify-between\">\r\n+                    <div className=\"flex-1 min-w-0\">\r\n+                      <h4 className=\"font-medium text-gray-900 text-sm truncate\">{rec.name}</h4>\r\n+                      <p className=\"text-xs text-gray-500 mt-1 line-clamp-2\">{rec.description}</p>\r\n                       \r\n-                      <button\r\n-                        onClick={() => handleAddRecommendation(rec)}\r\n-                        className=\"ml-2 w-6 h-6 bg-primary-600 text-white rounded-full flex items-center justify-center hover:bg-primary-700 transition-colors flex-shrink-0\"\r\n-                      >\r\n-                        <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n-                        </svg>\r\n-                      </button>\r\n+                      {/* Rating */}\r\n+                      {rec.rating && (\r\n+                        <div className=\"flex items-center mt-1\">\r\n+                          <svg className=\"w-3 h-3 text-yellow-400 fill-current\" viewBox=\"0 0 20 20\">\r\n+                            <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n+                          </svg>\r\n+                          <span className=\"ml-1 text-xs text-gray-600\">{rec.rating}</span>\r\n+                        </div>\r\n+                      )}\r\n+                      \r\n+                      {/* Curated badge */}\r\n+                      {rec.isCurated && (\r\n+                        <span className=\"inline-block mt-1 px-2 py-0.5 text-xs bg-green-100 text-green-700 rounded-full\">\r\n+                          Curated\r\n+                        </span>\r\n+                      )}\r\n                     </div>\r\n+                    \r\n+                    {/* Add button */}\r\n+                    <button\r\n+                      onClick={() => handleAddRecommendation(rec)}\r\n+                      className=\"ml-2 w-6 h-6 bg-primary-600 text-white rounded-full flex items-center justify-center hover:bg-primary-700 transition-colors flex-shrink-0\"\r\n+                    >\r\n+                      <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n+                      </svg>\r\n+                    </button>\r\n                   </div>\r\n                 </div>\r\n-              ))}\r\n-            </div>\r\n-          )}\r\n-        </div>\r\n-      )}\r\n+              </div>\r\n+            ))}\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n     </div>\r\n   );\r\n-} \n+}; \n\\ No newline at end of file\n"
                },
                {
                    "date": 1752492672964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -347,86 +347,94 @@\n   }\r\n \r\n   return (\r\n     <div className=\"border-t border-gray-200 bg-white\">\r\n-      {/* Category Filter */}\r\n-      <div className=\"p-4 border-b border-gray-100\">\r\n+      {/* Category Filter - Hidden for now */}\r\n+      <div className=\"hidden p-4 border-b border-gray-100\">\r\n         <div className=\"flex items-center justify-between mb-3\">\r\n           <h3 className=\"text-lg font-semibold text-gray-900\">Recommended places</h3>\r\n           <select\r\n             value={selectedCategory}\r\n             onChange={(e) => setSelectedCategory(e.target.value)}\r\n             className=\"text-sm border border-gray-300 rounded-md px-2 py-1 focus:ring-2 focus:ring-primary-500 focus:border-transparent\"\r\n           >\r\n-            {categories.map(cat => (\r\n-              <option key={cat.value} value={cat.value}>{cat.label}</option>\r\n-            ))}\r\n+            <option value=\"all\">All</option>\r\n+            <option value=\"attractions\">Attractions</option>\r\n+            <option value=\"restaurants\">Restaurants</option>\r\n+            <option value=\"museums\">Museums</option>\r\n+            <option value=\"shopping\">Shopping</option>\r\n+            <option value=\"parks\">Parks</option>\r\n           </select>\r\n         </div>\r\n       </div>\r\n \r\n-      {/* Horizontal Scrollable Cards */}\r\n-      <div className=\"p-4\">\r\n+      {/* Compact Header */}\r\n+      <div className=\"px-3 py-2 border-b border-gray-100\">\r\n+        <h3 className=\"text-sm font-medium text-gray-700\">Recommended places</h3>\r\n+      </div>\r\n+\r\n+      {/* Horizontal Scrollable Cards - Much Smaller */}\r\n+      <div className=\"p-2\">\r\n         {filteredRecommendations.length === 0 ? (\r\n-          <div className=\"text-center py-8 text-gray-500\">\r\n-            <p className=\"text-sm\">No recommendations found for this category.</p>\r\n+          <div className=\"text-center py-4 text-gray-500\">\r\n+            <p className=\"text-xs\">No recommendations found.</p>\r\n           </div>\r\n         ) : (\r\n-          <div className=\"flex space-x-3 overflow-x-auto pb-2\">\r\n+          <div className=\"flex space-x-2 overflow-x-auto pb-1\">\r\n             {filteredRecommendations.map((rec) => (\r\n               <div\r\n                 key={rec.id}\r\n-                className=\"flex-shrink-0 w-48 bg-white border border-gray-200 rounded-lg hover:shadow-md transition-shadow\"\r\n+                className=\"flex-shrink-0 w-32 bg-white border border-gray-200 rounded-md hover:shadow-sm transition-shadow\"\r\n               >\r\n-                {/* Image */}\r\n-                <div className=\"h-32 bg-gray-200 rounded-t-lg overflow-hidden\">\r\n+                {/* Small Image */}\r\n+                <div className=\"h-16 bg-gray-200 rounded-t-md overflow-hidden\">\r\n                   {rec.photo ? (\r\n                     <img\r\n                       src={rec.photo}\r\n                       alt={rec.name}\r\n                       className=\"w-full h-full object-cover\"\r\n                     />\r\n                   ) : (\r\n                     <div className=\"w-full h-full flex items-center justify-center bg-gray-100\">\r\n-                      <svg className=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                      <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                         <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\r\n                         <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                       </svg>\r\n                     </div>\r\n                   )}\r\n                 </div>\r\n \r\n-                {/* Content */}\r\n-                <div className=\"p-3\">\r\n+                {/* Compact Content */}\r\n+                <div className=\"p-2\">\r\n                   <div className=\"flex items-start justify-between\">\r\n-                    <div className=\"flex-1 min-w-0\">\r\n-                      <h4 className=\"font-medium text-gray-900 text-sm truncate\">{rec.name}</h4>\r\n-                      <p className=\"text-xs text-gray-500 mt-1 line-clamp-2\">{rec.description}</p>\r\n+                    <div className=\"flex-1 min-w-0 pr-1\">\r\n+                      <h4 className=\"font-medium text-gray-900 text-xs truncate\">{rec.name}</h4>\r\n+                      <p className=\"text-xs text-gray-500 mt-0.5 line-clamp-1\">{rec.description}</p>\r\n                       \r\n-                      {/* Rating */}\r\n+                      {/* Rating - Smaller */}\r\n                       {rec.rating && (\r\n-                        <div className=\"flex items-center mt-1\">\r\n-                          <svg className=\"w-3 h-3 text-yellow-400 fill-current\" viewBox=\"0 0 20 20\">\r\n+                        <div className=\"flex items-center mt-0.5\">\r\n+                          <svg className=\"w-2.5 h-2.5 text-yellow-400 fill-current\" viewBox=\"0 0 20 20\">\r\n                             <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n                           </svg>\r\n-                          <span className=\"ml-1 text-xs text-gray-600\">{rec.rating}</span>\r\n+                          <span className=\"ml-0.5 text-xs text-gray-600\">{rec.rating}</span>\r\n                         </div>\r\n                       )}\r\n                       \r\n-                      {/* Curated badge */}\r\n+                      {/* Curated badge - Smaller */}\r\n                       {rec.isCurated && (\r\n-                        <span className=\"inline-block mt-1 px-2 py-0.5 text-xs bg-green-100 text-green-700 rounded-full\">\r\n+                        <span className=\"inline-block mt-0.5 px-1 py-0.5 text-xs bg-green-100 text-green-700 rounded-full\">\r\n                           Curated\r\n                         </span>\r\n                       )}\r\n                     </div>\r\n                     \r\n-                    {/* Add button */}\r\n+                    {/* Smaller Add button */}\r\n                     <button\r\n                       onClick={() => handleAddRecommendation(rec)}\r\n-                      className=\"ml-2 w-6 h-6 bg-primary-600 text-white rounded-full flex items-center justify-center hover:bg-primary-700 transition-colors flex-shrink-0\"\r\n+                      className=\"w-4 h-4 bg-primary-600 text-white rounded-full flex items-center justify-center hover:bg-primary-700 transition-colors flex-shrink-0\"\r\n                     >\r\n-                      <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                      <svg className=\"w-2.5 h-2.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                         <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n                       </svg>\r\n                     </button>\r\n                   </div>\r\n"
                },
                {
                    "date": 1752492792298,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -382,32 +382,33 @@\n           <div className=\"flex space-x-2 overflow-x-auto pb-1\">\r\n             {filteredRecommendations.map((rec) => (\r\n               <div\r\n                 key={rec.id}\r\n-                className=\"flex-shrink-0 w-32 bg-white border border-gray-200 rounded-md hover:shadow-sm transition-shadow\"\r\n+                className=\"flex-shrink-0 w-40 bg-white border border-gray-200 rounded-md hover:shadow-sm transition-shadow\"\r\n               >\r\n-                {/* Small Image */}\r\n-                <div className=\"h-16 bg-gray-200 rounded-t-md overflow-hidden\">\r\n-                  {rec.photo ? (\r\n-                    <img\r\n-                      src={rec.photo}\r\n-                      alt={rec.name}\r\n-                      className=\"w-full h-full object-cover\"\r\n-                    />\r\n-                  ) : (\r\n-                    <div className=\"w-full h-full flex items-center justify-center bg-gray-100\">\r\n-                      <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\r\n-                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n-                      </svg>\r\n-                    </div>\r\n-                  )}\r\n-                </div>\r\n+                {/* Horizontal Layout: Square image + Content rectangle */}\r\n+                <div className=\"flex h-16\">\r\n+                  {/* Square Image */}\r\n+                  <div className=\"w-16 h-16 bg-gray-200 rounded-l-md overflow-hidden flex-shrink-0\">\r\n+                    {rec.photo ? (\r\n+                      <img\r\n+                        src={rec.photo}\r\n+                        alt={rec.name}\r\n+                        className=\"w-full h-full object-cover\"\r\n+                      />\r\n+                    ) : (\r\n+                      <div className=\"w-full h-full flex items-center justify-center bg-gray-100\">\r\n+                        <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\r\n+                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n+                        </svg>\r\n+                      </div>\r\n+                    )}\r\n+                  </div>\r\n \r\n-                {/* Compact Content */}\r\n-                <div className=\"p-2\">\r\n-                  <div className=\"flex items-start justify-between\">\r\n-                    <div className=\"flex-1 min-w-0 pr-1\">\r\n+                  {/* Content Rectangle */}\r\n+                  <div className=\"flex-1 p-2 flex flex-col justify-between\">\r\n+                    <div className=\"flex-1 min-w-0\">\r\n                       <h4 className=\"font-medium text-gray-900 text-xs truncate\">{rec.name}</h4>\r\n                       <p className=\"text-xs text-gray-500 mt-0.5 line-clamp-1\">{rec.description}</p>\r\n                       \r\n                       {/* Rating - Smaller */}\r\n@@ -427,17 +428,19 @@\n                         </span>\r\n                       )}\r\n                     </div>\r\n                     \r\n-                    {/* Smaller Add button */}\r\n-                    <button\r\n-                      onClick={() => handleAddRecommendation(rec)}\r\n-                      className=\"w-4 h-4 bg-primary-600 text-white rounded-full flex items-center justify-center hover:bg-primary-700 transition-colors flex-shrink-0\"\r\n-                    >\r\n-                      <svg className=\"w-2.5 h-2.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n-                      </svg>\r\n-                    </button>\r\n+                    {/* Add button in bottom right */}\r\n+                    <div className=\"flex justify-end\">\r\n+                      <button\r\n+                        onClick={() => handleAddRecommendation(rec)}\r\n+                        className=\"w-4 h-4 bg-primary-600 text-white rounded-full flex items-center justify-center hover:bg-primary-700 transition-colors\"\r\n+                      >\r\n+                        <svg className=\"w-2.5 h-2.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n+                        </svg>\r\n+                      </button>\r\n+                    </div>\r\n                   </div>\r\n                 </div>\r\n               </div>\r\n             ))}\r\n"
                },
                {
                    "date": 1752492947747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -382,14 +382,14 @@\n           <div className=\"flex space-x-2 overflow-x-auto pb-1\">\r\n             {filteredRecommendations.map((rec) => (\r\n               <div\r\n                 key={rec.id}\r\n-                className=\"flex-shrink-0 w-40 bg-white border border-gray-200 rounded-md hover:shadow-sm transition-shadow\"\r\n+                className=\"flex-shrink-0 w-48 bg-white border border-gray-200 rounded-md hover:shadow-sm transition-shadow\"\r\n               >\r\n                 {/* Horizontal Layout: Square image + Content rectangle */}\r\n-                <div className=\"flex h-16\">\r\n+                <div className=\"flex h-20\">\r\n                   {/* Square Image */}\r\n-                  <div className=\"w-16 h-16 bg-gray-200 rounded-l-md overflow-hidden flex-shrink-0\">\r\n+                  <div className=\"w-20 h-20 bg-gray-200 rounded-l-md overflow-hidden flex-shrink-0\">\r\n                     {rec.photo ? (\r\n                       <img\r\n                         src={rec.photo}\r\n                         alt={rec.name}\r\n@@ -404,43 +404,43 @@\n                       </div>\r\n                     )}\r\n                   </div>\r\n \r\n-                  {/* Content Rectangle */}\r\n-                  <div className=\"flex-1 p-2 flex flex-col justify-between\">\r\n+                  {/* Content Rectangle - Longer */}\r\n+                  <div className=\"flex-1 p-2 flex flex-col justify-between min-w-0\">\r\n                     <div className=\"flex-1 min-w-0\">\r\n                       <h4 className=\"font-medium text-gray-900 text-xs truncate\">{rec.name}</h4>\r\n-                      <p className=\"text-xs text-gray-500 mt-0.5 line-clamp-1\">{rec.description}</p>\r\n+                      <p className=\"text-xs text-gray-500 mt-0.5 line-clamp-2\">{rec.description}</p>\r\n                       \r\n-                      {/* Rating - Smaller */}\r\n-                      {rec.rating && (\r\n-                        <div className=\"flex items-center mt-0.5\">\r\n-                          <svg className=\"w-2.5 h-2.5 text-yellow-400 fill-current\" viewBox=\"0 0 20 20\">\r\n-                            <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n+                      {/* Rating and Curated badge on same line */}\r\n+                      <div className=\"flex items-center justify-between mt-1\">\r\n+                        {rec.rating && (\r\n+                          <div className=\"flex items-center\">\r\n+                            <svg className=\"w-2.5 h-2.5 text-yellow-400 fill-current\" viewBox=\"0 0 20 20\">\r\n+                              <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n+                            </svg>\r\n+                            <span className=\"ml-0.5 text-xs text-gray-600\">{rec.rating}</span>\r\n+                          </div>\r\n+                        )}\r\n+                        \r\n+                        {/* Curated badge - Smaller */}\r\n+                        {rec.isCurated && (\r\n+                          <span className=\"inline-block px-1 py-0.5 text-xs bg-green-100 text-green-700 rounded-full\">\r\n+                            Curated\r\n+                          </span>\r\n+                        )}\r\n+                        \r\n+                        {/* Add button - Right aligned */}\r\n+                        <button\r\n+                          onClick={() => handleAddRecommendation(rec)}\r\n+                          className=\"w-4 h-4 bg-primary-600 text-white rounded-full flex items-center justify-center hover:bg-primary-700 transition-colors ml-1\"\r\n+                        >\r\n+                          <svg className=\"w-2.5 h-2.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n                           </svg>\r\n-                          <span className=\"ml-0.5 text-xs text-gray-600\">{rec.rating}</span>\r\n-                        </div>\r\n-                      )}\r\n-                      \r\n-                      {/* Curated badge - Smaller */}\r\n-                      {rec.isCurated && (\r\n-                        <span className=\"inline-block mt-0.5 px-1 py-0.5 text-xs bg-green-100 text-green-700 rounded-full\">\r\n-                          Curated\r\n-                        </span>\r\n-                      )}\r\n+                        </button>\r\n+                      </div>\r\n                     </div>\r\n-                    \r\n-                    {/* Add button in bottom right */}\r\n-                    <div className=\"flex justify-end\">\r\n-                      <button\r\n-                        onClick={() => handleAddRecommendation(rec)}\r\n-                        className=\"w-4 h-4 bg-primary-600 text-white rounded-full flex items-center justify-center hover:bg-primary-700 transition-colors\"\r\n-                      >\r\n-                        <svg className=\"w-2.5 h-2.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n-                        </svg>\r\n-                      </button>\r\n-                    </div>\r\n                   </div>\r\n                 </div>\r\n               </div>\r\n             ))}\r\n"
                },
                {
                    "date": 1752493086048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -385,11 +385,11 @@\n                 key={rec.id}\r\n                 className=\"flex-shrink-0 w-48 bg-white border border-gray-200 rounded-md hover:shadow-sm transition-shadow\"\r\n               >\r\n                 {/* Horizontal Layout: Square image + Content rectangle */}\r\n-                <div className=\"flex h-20\">\r\n+                <div className=\"flex h-22\">\r\n                   {/* Square Image */}\r\n-                  <div className=\"w-20 h-20 bg-gray-200 rounded-l-md overflow-hidden flex-shrink-0\">\r\n+                  <div className=\"w-22 h-22 bg-gray-200 rounded-l-md overflow-hidden flex-shrink-0\">\r\n                     {rec.photo ? (\r\n                       <img\r\n                         src={rec.photo}\r\n                         alt={rec.name}\r\n@@ -405,15 +405,15 @@\n                     )}\r\n                   </div>\r\n \r\n                   {/* Content Rectangle - Longer */}\r\n-                  <div className=\"flex-1 p-2 flex flex-col justify-between min-w-0\">\r\n+                  <div className=\"flex-1 p-2.5 flex flex-col justify-between min-w-0\">\r\n                     <div className=\"flex-1 min-w-0\">\r\n                       <h4 className=\"font-medium text-gray-900 text-xs truncate\">{rec.name}</h4>\r\n                       <p className=\"text-xs text-gray-500 mt-0.5 line-clamp-2\">{rec.description}</p>\r\n                       \r\n                       {/* Rating and Curated badge on same line */}\r\n-                      <div className=\"flex items-center justify-between mt-1\">\r\n+                      <div className=\"flex items-center justify-between mt-1.5\">\r\n                         {rec.rating && (\r\n                           <div className=\"flex items-center\">\r\n                             <svg className=\"w-2.5 h-2.5 text-yellow-400 fill-current\" viewBox=\"0 0 20 20\">\r\n                               <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n"
                },
                {
                    "date": 1752493155612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -385,11 +385,11 @@\n                 key={rec.id}\r\n                 className=\"flex-shrink-0 w-48 bg-white border border-gray-200 rounded-md hover:shadow-sm transition-shadow\"\r\n               >\r\n                 {/* Horizontal Layout: Square image + Content rectangle */}\r\n-                <div className=\"flex h-22\">\r\n+                <div className=\"flex h-24\">\r\n                   {/* Square Image */}\r\n-                  <div className=\"w-22 h-22 bg-gray-200 rounded-l-md overflow-hidden flex-shrink-0\">\r\n+                  <div className=\"w-24 h-24 bg-gray-200 rounded-l-md overflow-hidden flex-shrink-0\">\r\n                     {rec.photo ? (\r\n                       <img\r\n                         src={rec.photo}\r\n                         alt={rec.name}\r\n@@ -405,15 +405,15 @@\n                     )}\r\n                   </div>\r\n \r\n                   {/* Content Rectangle - Longer */}\r\n-                  <div className=\"flex-1 p-2.5 flex flex-col justify-between min-w-0\">\r\n+                  <div className=\"flex-1 p-3 flex flex-col justify-between min-w-0\">\r\n                     <div className=\"flex-1 min-w-0\">\r\n                       <h4 className=\"font-medium text-gray-900 text-xs truncate\">{rec.name}</h4>\r\n                       <p className=\"text-xs text-gray-500 mt-0.5 line-clamp-2\">{rec.description}</p>\r\n                       \r\n                       {/* Rating and Curated badge on same line */}\r\n-                      <div className=\"flex items-center justify-between mt-1.5\">\r\n+                      <div className=\"flex items-center justify-between mt-2\">\r\n                         {rec.rating && (\r\n                           <div className=\"flex items-center\">\r\n                             <svg className=\"w-2.5 h-2.5 text-yellow-400 fill-current\" viewBox=\"0 0 20 20\">\r\n                               <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n"
                },
                {
                    "date": 1752493246914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -382,9 +382,9 @@\n           <div className=\"flex space-x-2 overflow-x-auto pb-1\">\r\n             {filteredRecommendations.map((rec) => (\r\n               <div\r\n                 key={rec.id}\r\n-                className=\"flex-shrink-0 w-48 bg-white border border-gray-200 rounded-md hover:shadow-sm transition-shadow\"\r\n+                className=\"flex-shrink-0 w-72 bg-white border border-gray-200 rounded-md hover:shadow-sm transition-shadow\"\r\n               >\r\n                 {/* Horizontal Layout: Square image + Content rectangle */}\r\n                 <div className=\"flex h-24\">\r\n                   {/* Square Image */}\r\n@@ -404,9 +404,9 @@\n                       </div>\r\n                     )}\r\n                   </div>\r\n \r\n-                  {/* Content Rectangle - Longer */}\r\n+                  {/* Content Rectangle - Much Longer */}\r\n                   <div className=\"flex-1 p-3 flex flex-col justify-between min-w-0\">\r\n                     <div className=\"flex-1 min-w-0\">\r\n                       <h4 className=\"font-medium text-gray-900 text-xs truncate\">{rec.name}</h4>\r\n                       <p className=\"text-xs text-gray-500 mt-0.5 line-clamp-2\">{rec.description}</p>\r\n"
                },
                {
                    "date": 1752493393179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,24 +37,27 @@\n       lat: 35.7148,\r\n       lng: 139.7967,\r\n       category: 'tourist_attraction',\r\n       description: 'Ancient Buddhist temple and Tokyo\\'s oldest temple',\r\n+      photo: 'https://images.unsplash.com/photo-1545569341-9eb8b30979d9?w=400&h=300&fit=crop',\r\n     },\r\n     {\r\n       name: 'Shibuya Crossing',\r\n       address: 'Shibuya City, Tokyo',\r\n       lat: 35.6598,\r\n       lng: 139.7006,\r\n       category: 'point_of_interest',\r\n       description: 'Famous scramble crossing and bustling district',\r\n+      photo: 'https://images.unsplash.com/photo-1540959733332-eab4deabeeaf?w=400&h=300&fit=crop',\r\n     },\r\n     {\r\n       name: 'Tsukiji Outer Market',\r\n       address: 'Tsukiji, Chuo City, Tokyo',\r\n       lat: 35.6654,\r\n       lng: 139.7707,\r\n       category: 'food',\r\n       description: 'Fresh seafood market with street food',\r\n+      photo: 'https://images.unsplash.com/photo-1554797589-7241bb691973?w=400&h=300&fit=crop',\r\n     },\r\n   ],\r\n   paris: [\r\n     {\r\n@@ -63,16 +66,18 @@\n       lat: 48.8584,\r\n       lng: 2.2945,\r\n       category: 'tourist_attraction',\r\n       description: 'Iconic iron lattice tower and symbol of Paris',\r\n+      photo: 'https://images.unsplash.com/photo-1511739001486-6bfe10ce785f?w=400&h=300&fit=crop',\r\n     },\r\n     {\r\n       name: 'Louvre Museum',\r\n       address: 'Rue de Rivoli, Paris',\r\n       lat: 48.8606,\r\n       lng: 2.3376,\r\n       category: 'museum',\r\n       description: 'World\\'s largest art museum and historic monument',\r\n+      photo: 'https://images.unsplash.com/photo-1564399580075-5dfe19c205f3?w=400&h=300&fit=crop',\r\n     },\r\n   ],\r\n   london: [\r\n     {\r\n@@ -81,16 +86,18 @@\n       lat: 51.5007,\r\n       lng: -0.1246,\r\n       category: 'tourist_attraction',\r\n       description: 'Famous clock tower at Palace of Westminster',\r\n+      photo: 'https://images.unsplash.com/photo-1513635269975-59663e0ac1ad?w=400&h=300&fit=crop',\r\n     },\r\n     {\r\n       name: 'Tower Bridge',\r\n       address: 'Tower Bridge Rd, London',\r\n       lat: 51.5055,\r\n       lng: -0.0754,\r\n       category: 'tourist_attraction',\r\n       description: 'Victorian Gothic bascule and suspension bridge',\r\n+      photo: 'https://images.unsplash.com/photo-1515920892043-e8b3b7b13bee?w=400&h=300&fit=crop',\r\n     },\r\n   ],\r\n };\r\n \r\n"
                },
                {
                    "date": 1752493412561,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -213,9 +213,9 @@\n             id: `curated-${city}-${index}`,\r\n             ...rec,\r\n             source: 'curated',\r\n             isCurated: true,\r\n-            photo: undefined, // No direct photo URL for curated\r\n+            photo: rec.photo, // Use the photo URL from curated data\r\n           });\r\n         });\r\n       }\r\n     });\r\n"
                },
                {
                    "date": 1752494706603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -379,9 +379,9 @@\n         <h3 className=\"text-sm font-medium text-gray-700\">Recommended places</h3>\r\n       </div>\r\n \r\n       {/* Horizontal Scrollable Cards - Much Smaller */}\r\n-      <div className=\"p-2\">\r\n+      <div className=\"px-2 pt-2 pb-0\">\r\n         {filteredRecommendations.length === 0 ? (\r\n           <div className=\"text-center py-4 text-gray-500\">\r\n             <p className=\"text-xs\">No recommendations found.</p>\r\n           </div>\r\n"
                },
                {
                    "date": 1752494714698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -353,9 +353,9 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"border-t border-gray-200 bg-white\">\r\n+    <div className=\"border-t border-gray-200 bg-white flex-1\">\r\n       {/* Category Filter - Hidden for now */}\r\n       <div className=\"hidden p-4 border-b border-gray-100\">\r\n         <div className=\"flex items-center justify-between mb-3\">\r\n           <h3 className=\"text-lg font-semibold text-gray-900\">Recommended places</h3>\r\n"
                },
                {
                    "date": 1752495026441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,459 +1,1 @@\n-'use client';\r\n-\r\n-import { useState, useEffect, useRef } from 'react';\r\n-import { Trip, Destination, TripDay } from '@/types';\r\n-\r\n-interface SmartRecommendationsProps {\r\n-  trip: Trip;\r\n-  tripDays: TripDay[];\r\n-  selectedDay: number;\r\n-  onDestinationAdd: (destination: Destination) => void;\r\n-  existingDestinations: Destination[];\r\n-}\r\n-\r\n-interface RecommendationItem {\r\n-  id: string;\r\n-  name: string;\r\n-  address: string;\r\n-  lat: number;\r\n-  lng: number;\r\n-  category: string;\r\n-  rating?: number;\r\n-  priceLevel?: number;\r\n-  photos?: string[];\r\n-  description: string;\r\n-  source: 'places' | 'curated';\r\n-  placeId?: string;\r\n-  isCurated?: boolean; // Added for curated recommendations\r\n-  photo?: string; // Added for photo URL\r\n-}\r\n-\r\n-// Curated recommendations based on location and context\r\n-const CURATED_RECOMMENDATIONS = {\r\n-  tokyo: [\r\n-    {\r\n-      name: 'Senso-ji Temple',\r\n-      address: '2-3-1 Asakusa, Taito City, Tokyo',\r\n-      lat: 35.7148,\r\n-      lng: 139.7967,\r\n-      category: 'tourist_attraction',\r\n-      description: 'Ancient Buddhist temple and Tokyo\\'s oldest temple',\r\n-      photo: 'https://images.unsplash.com/photo-1545569341-9eb8b30979d9?w=400&h=300&fit=crop',\r\n-    },\r\n-    {\r\n-      name: 'Shibuya Crossing',\r\n-      address: 'Shibuya City, Tokyo',\r\n-      lat: 35.6598,\r\n-      lng: 139.7006,\r\n-      category: 'point_of_interest',\r\n-      description: 'Famous scramble crossing and bustling district',\r\n-      photo: 'https://images.unsplash.com/photo-1540959733332-eab4deabeeaf?w=400&h=300&fit=crop',\r\n-    },\r\n-    {\r\n-      name: 'Tsukiji Outer Market',\r\n-      address: 'Tsukiji, Chuo City, Tokyo',\r\n-      lat: 35.6654,\r\n-      lng: 139.7707,\r\n-      category: 'food',\r\n-      description: 'Fresh seafood market with street food',\r\n-      photo: 'https://images.unsplash.com/photo-1554797589-7241bb691973?w=400&h=300&fit=crop',\r\n-    },\r\n-  ],\r\n-  paris: [\r\n-    {\r\n-      name: 'Eiffel Tower',\r\n-      address: 'Champ de Mars, 5 Avenue Anatole France, Paris',\r\n-      lat: 48.8584,\r\n-      lng: 2.2945,\r\n-      category: 'tourist_attraction',\r\n-      description: 'Iconic iron lattice tower and symbol of Paris',\r\n-      photo: 'https://images.unsplash.com/photo-1511739001486-6bfe10ce785f?w=400&h=300&fit=crop',\r\n-    },\r\n-    {\r\n-      name: 'Louvre Museum',\r\n-      address: 'Rue de Rivoli, Paris',\r\n-      lat: 48.8606,\r\n-      lng: 2.3376,\r\n-      category: 'museum',\r\n-      description: 'World\\'s largest art museum and historic monument',\r\n-      photo: 'https://images.unsplash.com/photo-1564399580075-5dfe19c205f3?w=400&h=300&fit=crop',\r\n-    },\r\n-  ],\r\n-  london: [\r\n-    {\r\n-      name: 'Big Ben',\r\n-      address: 'Westminster, London',\r\n-      lat: 51.5007,\r\n-      lng: -0.1246,\r\n-      category: 'tourist_attraction',\r\n-      description: 'Famous clock tower at Palace of Westminster',\r\n-      photo: 'https://images.unsplash.com/photo-1513635269975-59663e0ac1ad?w=400&h=300&fit=crop',\r\n-    },\r\n-    {\r\n-      name: 'Tower Bridge',\r\n-      address: 'Tower Bridge Rd, London',\r\n-      lat: 51.5055,\r\n-      lng: -0.0754,\r\n-      category: 'tourist_attraction',\r\n-      description: 'Victorian Gothic bascule and suspension bridge',\r\n-      photo: 'https://images.unsplash.com/photo-1515920892043-e8b3b7b13bee?w=400&h=300&fit=crop',\r\n-    },\r\n-  ],\r\n-};\r\n-\r\n-export default function SmartRecommendations({\r\n-  trip,\r\n-  tripDays,\r\n-  selectedDay,\r\n-  onDestinationAdd,\r\n-  existingDestinations,\r\n-}: SmartRecommendationsProps) {\r\n-  const [recommendations, setRecommendations] = useState<RecommendationItem[]>([]);\r\n-  const [isLoading, setIsLoading] = useState(false);\r\n-  const [error, setError] = useState<string | null>(null);\r\n-  const [selectedCategory, setSelectedCategory] = useState<string>('all');\r\n-  \r\n-  const placesService = useRef<google.maps.places.PlacesService | null>(null);\r\n-\r\n-  // Initialize Google Places service\r\n-  useEffect(() => {\r\n-    const initPlacesService = () => {\r\n-      if (window.google?.maps?.places) {\r\n-        const mapDiv = document.createElement('div');\r\n-        mapDiv.style.display = 'none';\r\n-        document.body.appendChild(mapDiv);\r\n-        \r\n-        const map = new google.maps.Map(mapDiv, {\r\n-          center: { lat: 0, lng: 0 },\r\n-          zoom: 1\r\n-        });\r\n-        \r\n-        placesService.current = new google.maps.places.PlacesService(map);\r\n-      }\r\n-    };\r\n-\r\n-    if (window.google?.maps?.places) {\r\n-      initPlacesService();\r\n-    } else {\r\n-      // Wait for Google Maps to load\r\n-      const checkGoogle = () => {\r\n-        if (window.google?.maps?.places) {\r\n-          initPlacesService();\r\n-        } else {\r\n-          setTimeout(checkGoogle, 100);\r\n-        }\r\n-      };\r\n-      checkGoogle();\r\n-    }\r\n-  }, []);\r\n-\r\n-  // Generate recommendations based on existing destinations and trip context\r\n-  useEffect(() => {\r\n-    generateRecommendations();\r\n-  }, [selectedDay, existingDestinations, trip]);\r\n-\r\n-  const generateRecommendations = async () => {\r\n-    if (!existingDestinations.length) return;\r\n-    \r\n-    setIsLoading(true);\r\n-    setError(null);\r\n-    \r\n-    try {\r\n-      const newRecommendations: RecommendationItem[] = [];\r\n-      \r\n-      // Get curated recommendations based on trip location\r\n-      const curatedRecs = getCuratedRecommendations();\r\n-      newRecommendations.push(...curatedRecs);\r\n-      \r\n-      // Get Google Places recommendations near existing destinations\r\n-      if (placesService.current) {\r\n-        const placesRecs = await getPlacesRecommendations();\r\n-        newRecommendations.push(...placesRecs);\r\n-      }\r\n-      \r\n-      // Filter out destinations that already exist in the trip\r\n-      const filteredRecs = newRecommendations.filter(rec => \r\n-        !existingDestinations.some(dest => \r\n-          Math.abs(dest.lat - rec.lat) < 0.001 && \r\n-          Math.abs(dest.lng - rec.lng) < 0.001\r\n-        )\r\n-      );\r\n-      \r\n-      // Sort by rating and remove duplicates\r\n-      const uniqueRecs = filteredRecs.reduce((acc, current) => {\r\n-        const exists = acc.find(item => \r\n-          item.name === current.name || \r\n-          (Math.abs(item.lat - current.lat) < 0.0001 && Math.abs(item.lng - current.lng) < 0.0001)\r\n-        );\r\n-        if (!exists) {\r\n-          acc.push(current);\r\n-        }\r\n-        return acc;\r\n-      }, [] as RecommendationItem[]);\r\n-      \r\n-      setRecommendations(uniqueRecs.slice(0, 12)); // Limit to 12 recommendations\r\n-      \r\n-    } catch (err) {\r\n-      console.error('Error generating recommendations:', err);\r\n-      setError('Failed to load recommendations');\r\n-    } finally {\r\n-      setIsLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-  const getCuratedRecommendations = (): RecommendationItem[] => {\r\n-    const location = trip.location.toLowerCase();\r\n-    const curated: RecommendationItem[] = [];\r\n-    \r\n-    // Check if trip location matches any curated locations\r\n-    Object.entries(CURATED_RECOMMENDATIONS).forEach(([city, recs]) => {\r\n-      if (location.includes(city)) {\r\n-        recs.forEach((rec, index) => {\r\n-          curated.push({\r\n-            id: `curated-${city}-${index}`,\r\n-            ...rec,\r\n-            source: 'curated',\r\n-            isCurated: true,\r\n-            photo: rec.photo, // Use the photo URL from curated data\r\n-          });\r\n-        });\r\n-      }\r\n-    });\r\n-    \r\n-    return curated;\r\n-  };\r\n-\r\n-  const getPlacesRecommendations = (): Promise<RecommendationItem[]> => {\r\n-    return new Promise((resolve) => {\r\n-      if (!placesService.current || !existingDestinations.length) {\r\n-        resolve([]);\r\n-        return;\r\n-      }\r\n-\r\n-      const recommendations: RecommendationItem[] = [];\r\n-      let completedSearches = 0;\r\n-      const totalSearches = Math.min(existingDestinations.length, 3); // Limit API calls\r\n-      \r\n-      if (totalSearches === 0) {\r\n-        resolve([]);\r\n-        return;\r\n-      }\r\n-\r\n-      // Search near each existing destination\r\n-      existingDestinations.slice(0, 3).forEach((destination, index) => {\r\n-        const request: google.maps.places.PlaceSearchRequest = {\r\n-          location: new google.maps.LatLng(destination.lat, destination.lng),\r\n-          radius: 2000, // 2km radius\r\n-          type: 'tourist_attraction',\r\n-        };\r\n-\r\n-        placesService.current!.nearbySearch(request, (results, status) => {\r\n-          if (status === google.maps.places.PlacesServiceStatus.OK && results) {\r\n-            results.slice(0, 4).forEach((place, placeIndex) => {\r\n-              if (place.geometry?.location && place.name) {\r\n-                recommendations.push({\r\n-                  id: `places-${index}-${placeIndex}`,\r\n-                  name: place.name,\r\n-                  address: place.vicinity || place.formatted_address || '',\r\n-                  lat: place.geometry.location.lat(),\r\n-                  lng: place.geometry.location.lng(),\r\n-                  category: place.types?.[0] || 'tourist_attraction',\r\n-                  rating: place.rating,\r\n-                  priceLevel: place.price_level,\r\n-                  photos: place.photos?.slice(0, 1).map(photo => \r\n-                    photo.getUrl({ maxWidth: 300, maxHeight: 200 })\r\n-                  ) || [],\r\n-                  description: `Popular ${place.types?.[0]?.replace(/_/g, ' ') || 'attraction'} near ${destination.locationName}`,\r\n-                  source: 'places',\r\n-                  placeId: place.place_id,\r\n-                  isCurated: false,\r\n-                  photo: place.photos?.[0]?.getUrl({ maxWidth: 300, maxHeight: 200 }),\r\n-                });\r\n-              }\r\n-            });\r\n-          }\r\n-          \r\n-          completedSearches++;\r\n-          if (completedSearches === totalSearches) {\r\n-            resolve(recommendations);\r\n-          }\r\n-        });\r\n-      });\r\n-    });\r\n-  };\r\n-\r\n-  const handleAddRecommendation = (rec: RecommendationItem) => {\r\n-    const selectedDayData = tripDays.find(d => d.day === selectedDay);\r\n-    \r\n-    const newDestination: Destination = {\r\n-      id: crypto.randomUUID(),\r\n-      tripId: trip.id,\r\n-      locationName: rec.name,\r\n-      address: rec.address,\r\n-      lat: rec.lat,\r\n-      lng: rec.lng,\r\n-      day: selectedDay,\r\n-      orderIndex: (selectedDayData?.destinations.length || 0) + 1,\r\n-      notes: rec.description,\r\n-      placeId: rec.placeId,\r\n-      category: rec.category,\r\n-      rating: rec.rating,\r\n-      priceLevel: rec.priceLevel,\r\n-      photos: rec.photos || [],\r\n-      createdAt: new Date(),\r\n-      updatedAt: new Date(),\r\n-    };\r\n-    \r\n-    onDestinationAdd(newDestination);\r\n-  };\r\n-\r\n-  const categories = [\r\n-    { value: 'all', label: 'All' },\r\n-    { value: 'tourist_attraction', label: 'Attractions' },\r\n-    { value: 'restaurant', label: 'Restaurants' },\r\n-    { value: 'museum', label: 'Museums' },\r\n-    { value: 'shopping_mall', label: 'Shopping' },\r\n-    { value: 'park', label: 'Parks' },\r\n-  ];\r\n-\r\n-  const filteredRecommendations = selectedCategory === 'all' \r\n-    ? recommendations \r\n-    : recommendations.filter(rec => rec.category === selectedCategory);\r\n-\r\n-  if (!existingDestinations.length) {\r\n-    return (\r\n-      <div className=\"p-4 text-center text-gray-500\">\r\n-        <svg className=\"w-12 h-12 mx-auto mb-3 text-gray-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\r\n-          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n-        </svg>\r\n-        <p className=\"text-sm\">Add destinations to see smart recommendations</p>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"p-4\">\r\n-        <div className=\"flex items-center justify-center py-8\">\r\n-          <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-primary-600\"></div>\r\n-          <span className=\"ml-2 text-sm text-gray-600\">Finding recommendations...</span>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"p-4\">\r\n-        <div className=\"bg-red-50 border border-red-200 rounded-lg p-3\">\r\n-          <p className=\"text-sm text-red-600\">{error}</p>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"border-t border-gray-200 bg-white flex-1\">\r\n-      {/* Category Filter - Hidden for now */}\r\n-      <div className=\"hidden p-4 border-b border-gray-100\">\r\n-        <div className=\"flex items-center justify-between mb-3\">\r\n-          <h3 className=\"text-lg font-semibold text-gray-900\">Recommended places</h3>\r\n-          <select\r\n-            value={selectedCategory}\r\n-            onChange={(e) => setSelectedCategory(e.target.value)}\r\n-            className=\"text-sm border border-gray-300 rounded-md px-2 py-1 focus:ring-2 focus:ring-primary-500 focus:border-transparent\"\r\n-          >\r\n-            <option value=\"all\">All</option>\r\n-            <option value=\"attractions\">Attractions</option>\r\n-            <option value=\"restaurants\">Restaurants</option>\r\n-            <option value=\"museums\">Museums</option>\r\n-            <option value=\"shopping\">Shopping</option>\r\n-            <option value=\"parks\">Parks</option>\r\n-          </select>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Compact Header */}\r\n-      <div className=\"px-3 py-2 border-b border-gray-100\">\r\n-        <h3 className=\"text-sm font-medium text-gray-700\">Recommended places</h3>\r\n-      </div>\r\n-\r\n-      {/* Horizontal Scrollable Cards - Much Smaller */}\r\n-      <div className=\"px-2 pt-2 pb-0\">\r\n-        {filteredRecommendations.length === 0 ? (\r\n-          <div className=\"text-center py-4 text-gray-500\">\r\n-            <p className=\"text-xs\">No recommendations found.</p>\r\n-          </div>\r\n-        ) : (\r\n-          <div className=\"flex space-x-2 overflow-x-auto pb-1\">\r\n-            {filteredRecommendations.map((rec) => (\r\n-              <div\r\n-                key={rec.id}\r\n-                className=\"flex-shrink-0 w-72 bg-white border border-gray-200 rounded-md hover:shadow-sm transition-shadow\"\r\n-              >\r\n-                {/* Horizontal Layout: Square image + Content rectangle */}\r\n-                <div className=\"flex h-24\">\r\n-                  {/* Square Image */}\r\n-                  <div className=\"w-24 h-24 bg-gray-200 rounded-l-md overflow-hidden flex-shrink-0\">\r\n-                    {rec.photo ? (\r\n-                      <img\r\n-                        src={rec.photo}\r\n-                        alt={rec.name}\r\n-                        className=\"w-full h-full object-cover\"\r\n-                      />\r\n-                    ) : (\r\n-                      <div className=\"w-full h-full flex items-center justify-center bg-gray-100\">\r\n-                        <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\r\n-                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n-                        </svg>\r\n-                      </div>\r\n-                    )}\r\n-                  </div>\r\n-\r\n-                  {/* Content Rectangle - Much Longer */}\r\n-                  <div className=\"flex-1 p-3 flex flex-col justify-between min-w-0\">\r\n-                    <div className=\"flex-1 min-w-0\">\r\n-                      <h4 className=\"font-medium text-gray-900 text-xs truncate\">{rec.name}</h4>\r\n-                      <p className=\"text-xs text-gray-500 mt-0.5 line-clamp-2\">{rec.description}</p>\r\n-                      \r\n-                      {/* Rating and Curated badge on same line */}\r\n-                      <div className=\"flex items-center justify-between mt-2\">\r\n-                        {rec.rating && (\r\n-                          <div className=\"flex items-center\">\r\n-                            <svg className=\"w-2.5 h-2.5 text-yellow-400 fill-current\" viewBox=\"0 0 20 20\">\r\n-                              <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n-                            </svg>\r\n-                            <span className=\"ml-0.5 text-xs text-gray-600\">{rec.rating}</span>\r\n-                          </div>\r\n-                        )}\r\n-                        \r\n-                        {/* Curated badge - Smaller */}\r\n-                        {rec.isCurated && (\r\n-                          <span className=\"inline-block px-1 py-0.5 text-xs bg-green-100 text-green-700 rounded-full\">\r\n-                            Curated\r\n-                          </span>\r\n-                        )}\r\n-                        \r\n-                        {/* Add button - Right aligned */}\r\n-                        <button\r\n-                          onClick={() => handleAddRecommendation(rec)}\r\n-                          className=\"w-4 h-4 bg-primary-600 text-white rounded-full flex items-center justify-center hover:bg-primary-700 transition-colors ml-1\"\r\n-                        >\r\n-                          <svg className=\"w-2.5 h-2.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n-                          </svg>\r\n-                        </button>\r\n-                      </div>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-              </div>\r\n-            ))}\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}; \n\\ No newline at end of file\n+ \n\\ No newline at end of file\n"
                },
                {
                    "date": 1752495067358,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,459 @@\n- \n\\ No newline at end of file\n+'use client';\n+\n+import { useState, useEffect, useRef } from 'react';\n+import { Trip, Destination, TripDay } from '@/types';\n+\n+interface SmartRecommendationsProps {\n+  trip: Trip;\n+  tripDays: TripDay[];\n+  selectedDay: number;\n+  onDestinationAdd: (destination: Destination) => void;\n+  existingDestinations: Destination[];\n+}\n+\n+interface RecommendationItem {\n+  id: string;\n+  name: string;\n+  address: string;\n+  lat: number;\n+  lng: number;\n+  category: string;\n+  rating?: number;\n+  priceLevel?: number;\n+  photos?: string[];\n+  description: string;\n+  source: 'places' | 'curated';\n+  placeId?: string;\n+  isCurated?: boolean; // Added for curated recommendations\n+  photo?: string; // Added for photo URL\n+}\n+\n+// Curated recommendations based on location and context\n+const CURATED_RECOMMENDATIONS = {\n+  tokyo: [\n+    {\n+      name: 'Senso-ji Temple',\n+      address: '2-3-1 Asakusa, Taito City, Tokyo',\n+      lat: 35.7148,\n+      lng: 139.7967,\n+      category: 'tourist_attraction',\n+      description: 'Ancient Buddhist temple and Tokyo\\'s oldest temple',\n+      photo: 'https://images.unsplash.com/photo-1545569341-9eb8b30979d9?w=400&h=300&fit=crop',\n+    },\n+    {\n+      name: 'Shibuya Crossing',\n+      address: 'Shibuya City, Tokyo',\n+      lat: 35.6598,\n+      lng: 139.7006,\n+      category: 'point_of_interest',\n+      description: 'Famous scramble crossing and bustling district',\n+      photo: 'https://images.unsplash.com/photo-1540959733332-eab4deabeeaf?w=400&h=300&fit=crop',\n+    },\n+    {\n+      name: 'Tsukiji Outer Market',\n+      address: 'Tsukiji, Chuo City, Tokyo',\n+      lat: 35.6654,\n+      lng: 139.7707,\n+      category: 'food',\n+      description: 'Fresh seafood market with street food',\n+      photo: 'https://images.unsplash.com/photo-1554797589-7241bb691973?w=400&h=300&fit=crop',\n+    },\n+  ],\n+  paris: [\n+    {\n+      name: 'Eiffel Tower',\n+      address: 'Champ de Mars, 5 Avenue Anatole France, Paris',\n+      lat: 48.8584,\n+      lng: 2.2945,\n+      category: 'tourist_attraction',\n+      description: 'Iconic iron lattice tower and symbol of Paris',\n+      photo: 'https://images.unsplash.com/photo-1511739001486-6bfe10ce785f?w=400&h=300&fit=crop',\n+    },\n+    {\n+      name: 'Louvre Museum',\n+      address: 'Rue de Rivoli, Paris',\n+      lat: 48.8606,\n+      lng: 2.3376,\n+      category: 'museum',\n+      description: 'World\\'s largest art museum and historic monument',\n+      photo: 'https://images.unsplash.com/photo-1564399580075-5dfe19c205f3?w=400&h=300&fit=crop',\n+    },\n+  ],\n+  london: [\n+    {\n+      name: 'Big Ben',\n+      address: 'Westminster, London',\n+      lat: 51.5007,\n+      lng: -0.1246,\n+      category: 'tourist_attraction',\n+      description: 'Famous clock tower at Palace of Westminster',\n+      photo: 'https://images.unsplash.com/photo-1513635269975-59663e0ac1ad?w=400&h=300&fit=crop',\n+    },\n+    {\n+      name: 'Tower Bridge',\n+      address: 'Tower Bridge Rd, London',\n+      lat: 51.5055,\n+      lng: -0.0754,\n+      category: 'tourist_attraction',\n+      description: 'Victorian Gothic bascule and suspension bridge',\n+      photo: 'https://images.unsplash.com/photo-1515920892043-e8b3b7b13bee?w=400&h=300&fit=crop',\n+    },\n+  ],\n+};\n+\n+export default function SmartRecommendations({\n+  trip,\n+  tripDays,\n+  selectedDay,\n+  onDestinationAdd,\n+  existingDestinations,\n+}: SmartRecommendationsProps) {\n+  const [recommendations, setRecommendations] = useState<RecommendationItem[]>([]);\n+  const [isLoading, setIsLoading] = useState(false);\n+  const [error, setError] = useState<string | null>(null);\n+  const [selectedCategory, setSelectedCategory] = useState<string>('all');\n+  \n+  const placesService = useRef<google.maps.places.PlacesService | null>(null);\n+\n+  // Initialize Google Places service\n+  useEffect(() => {\n+    const initPlacesService = () => {\n+      if (window.google?.maps?.places) {\n+        const mapDiv = document.createElement('div');\n+        mapDiv.style.display = 'none';\n+        document.body.appendChild(mapDiv);\n+        \n+        const map = new google.maps.Map(mapDiv, {\n+          center: { lat: 0, lng: 0 },\n+          zoom: 1\n+        });\n+        \n+        placesService.current = new google.maps.places.PlacesService(map);\n+      }\n+    };\n+\n+    if (window.google?.maps?.places) {\n+      initPlacesService();\n+    } else {\n+      // Wait for Google Maps to load\n+      const checkGoogle = () => {\n+        if (window.google?.maps?.places) {\n+          initPlacesService();\n+        } else {\n+          setTimeout(checkGoogle, 100);\n+        }\n+      };\n+      checkGoogle();\n+    }\n+  }, []);\n+\n+  // Generate recommendations based on existing destinations and trip context\n+  useEffect(() => {\n+    generateRecommendations();\n+  }, [selectedDay, existingDestinations, trip]);\n+\n+  const generateRecommendations = async () => {\n+    if (!existingDestinations.length) return;\n+    \n+    setIsLoading(true);\n+    setError(null);\n+    \n+    try {\n+      const newRecommendations: RecommendationItem[] = [];\n+      \n+      // Get curated recommendations based on trip location\n+      const curatedRecs = getCuratedRecommendations();\n+      newRecommendations.push(...curatedRecs);\n+      \n+      // Get Google Places recommendations near existing destinations\n+      if (placesService.current) {\n+        const placesRecs = await getPlacesRecommendations();\n+        newRecommendations.push(...placesRecs);\n+      }\n+      \n+      // Filter out destinations that already exist in the trip\n+      const filteredRecs = newRecommendations.filter(rec => \n+        !existingDestinations.some(dest => \n+          Math.abs(dest.lat - rec.lat) < 0.001 && \n+          Math.abs(dest.lng - rec.lng) < 0.001\n+        )\n+      );\n+      \n+      // Sort by rating and remove duplicates\n+      const uniqueRecs = filteredRecs.reduce((acc, current) => {\n+        const exists = acc.find(item => \n+          item.name === current.name || \n+          (Math.abs(item.lat - current.lat) < 0.0001 && Math.abs(item.lng - current.lng) < 0.0001)\n+        );\n+        if (!exists) {\n+          acc.push(current);\n+        }\n+        return acc;\n+      }, [] as RecommendationItem[]);\n+      \n+      setRecommendations(uniqueRecs.slice(0, 12)); // Limit to 12 recommendations\n+      \n+    } catch (err) {\n+      console.error('Error generating recommendations:', err);\n+      setError('Failed to load recommendations');\n+    } finally {\n+      setIsLoading(false);\n+    }\n+  };\n+\n+  const getCuratedRecommendations = (): RecommendationItem[] => {\n+    const location = trip.location.toLowerCase();\n+    const curated: RecommendationItem[] = [];\n+    \n+    // Check if trip location matches any curated locations\n+    Object.entries(CURATED_RECOMMENDATIONS).forEach(([city, recs]) => {\n+      if (location.includes(city)) {\n+        recs.forEach((rec, index) => {\n+          curated.push({\n+            id: `curated-${city}-${index}`,\n+            ...rec,\n+            source: 'curated',\n+            isCurated: true,\n+            photo: rec.photo, // Use the photo URL from curated data\n+          });\n+        });\n+      }\n+    });\n+    \n+    return curated;\n+  };\n+\n+  const getPlacesRecommendations = (): Promise<RecommendationItem[]> => {\n+    return new Promise((resolve) => {\n+      if (!placesService.current || !existingDestinations.length) {\n+        resolve([]);\n+        return;\n+      }\n+\n+      const recommendations: RecommendationItem[] = [];\n+      let completedSearches = 0;\n+      const totalSearches = Math.min(existingDestinations.length, 3); // Limit API calls\n+      \n+      if (totalSearches === 0) {\n+        resolve([]);\n+        return;\n+      }\n+\n+      // Search near each existing destination\n+      existingDestinations.slice(0, 3).forEach((destination, index) => {\n+        const request: google.maps.places.PlaceSearchRequest = {\n+          location: new google.maps.LatLng(destination.lat, destination.lng),\n+          radius: 2000, // 2km radius\n+          type: 'tourist_attraction',\n+        };\n+\n+        placesService.current!.nearbySearch(request, (results, status) => {\n+          if (status === google.maps.places.PlacesServiceStatus.OK && results) {\n+            results.slice(0, 4).forEach((place, placeIndex) => {\n+              if (place.geometry?.location && place.name) {\n+                recommendations.push({\n+                  id: `places-${index}-${placeIndex}`,\n+                  name: place.name,\n+                  address: place.vicinity || place.formatted_address || '',\n+                  lat: place.geometry.location.lat(),\n+                  lng: place.geometry.location.lng(),\n+                  category: place.types?.[0] || 'tourist_attraction',\n+                  rating: place.rating,\n+                  priceLevel: place.price_level,\n+                  photos: place.photos?.slice(0, 1).map(photo => \n+                    photo.getUrl({ maxWidth: 300, maxHeight: 200 })\n+                  ) || [],\n+                  description: `Popular ${place.types?.[0]?.replace(/_/g, ' ') || 'attraction'} near ${destination.locationName}`,\n+                  source: 'places',\n+                  placeId: place.place_id,\n+                  isCurated: false,\n+                  photo: place.photos?.[0]?.getUrl({ maxWidth: 300, maxHeight: 200 }),\n+                });\n+              }\n+            });\n+          }\n+          \n+          completedSearches++;\n+          if (completedSearches === totalSearches) {\n+            resolve(recommendations);\n+          }\n+        });\n+      });\n+    });\n+  };\n+\n+  const handleAddRecommendation = (rec: RecommendationItem) => {\n+    const selectedDayData = tripDays.find(d => d.day === selectedDay);\n+    \n+    const newDestination: Destination = {\n+      id: crypto.randomUUID(),\n+      tripId: trip.id,\n+      locationName: rec.name,\n+      address: rec.address,\n+      lat: rec.lat,\n+      lng: rec.lng,\n+      day: selectedDay,\n+      orderIndex: (selectedDayData?.destinations.length || 0) + 1,\n+      notes: rec.description,\n+      placeId: rec.placeId,\n+      category: rec.category,\n+      rating: rec.rating,\n+      priceLevel: rec.priceLevel,\n+      photos: rec.photos || [],\n+      createdAt: new Date(),\n+      updatedAt: new Date(),\n+    };\n+    \n+    onDestinationAdd(newDestination);\n+  };\n+\n+  const categories = [\n+    { value: 'all', label: 'All' },\n+    { value: 'tourist_attraction', label: 'Attractions' },\n+    { value: 'restaurant', label: 'Restaurants' },\n+    { value: 'museum', label: 'Museums' },\n+    { value: 'shopping_mall', label: 'Shopping' },\n+    { value: 'park', label: 'Parks' },\n+  ];\n+\n+  const filteredRecommendations = selectedCategory === 'all' \n+    ? recommendations \n+    : recommendations.filter(rec => rec.category === selectedCategory);\n+\n+  if (!existingDestinations.length) {\n+    return (\n+      <div className=\"p-4 text-center text-gray-500\">\n+        <svg className=\"w-12 h-12 mx-auto mb-3 text-gray-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n+          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n+        </svg>\n+        <p className=\"text-sm\">Add destinations to see smart recommendations</p>\n+      </div>\n+    );\n+  }\n+\n+  if (isLoading) {\n+    return (\n+      <div className=\"p-4\">\n+        <div className=\"flex items-center justify-center py-8\">\n+          <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-primary-600\"></div>\n+          <span className=\"ml-2 text-sm text-gray-600\">Finding recommendations...</span>\n+        </div>\n+      </div>\n+    );\n+  }\n+\n+  if (error) {\n+    return (\n+      <div className=\"p-4\">\n+        <div className=\"bg-red-50 border border-red-200 rounded-lg p-3\">\n+          <p className=\"text-sm text-red-600\">{error}</p>\n+        </div>\n+      </div>\n+    );\n+  }\n+\n+  return (\n+    <div className=\"border-t border-gray-200 bg-white flex-1\">\n+      {/* Category Filter - Hidden for now */}\n+      <div className=\"hidden p-4 border-b border-gray-100\">\n+        <div className=\"flex items-center justify-between mb-3\">\n+          <h3 className=\"text-lg font-semibold text-gray-900\">Recommended places</h3>\n+          <select\n+            value={selectedCategory}\n+            onChange={(e) => setSelectedCategory(e.target.value)}\n+            className=\"text-sm border border-gray-300 rounded-md px-2 py-1 focus:ring-2 focus:ring-primary-500 focus:border-transparent\"\n+          >\n+            <option value=\"all\">All</option>\n+            <option value=\"attractions\">Attractions</option>\n+            <option value=\"restaurants\">Restaurants</option>\n+            <option value=\"museums\">Museums</option>\n+            <option value=\"shopping\">Shopping</option>\n+            <option value=\"parks\">Parks</option>\n+          </select>\n+        </div>\n+      </div>\n+\n+      {/* Compact Header */}\n+      <div className=\"px-3 py-2 border-b border-gray-100\">\n+        <h3 className=\"text-sm font-medium text-gray-700\">Recommended places</h3>\n+      </div>\n+\n+      {/* Horizontal Scrollable Cards - Much Smaller */}\n+      <div className=\"px-2 pt-2 pb-0\">\n+        {filteredRecommendations.length === 0 ? (\n+          <div className=\"text-center py-4 text-gray-500\">\n+            <p className=\"text-xs\">No recommendations found.</p>\n+          </div>\n+        ) : (\n+          <div className=\"flex space-x-2 overflow-x-auto pb-1\">\n+            {filteredRecommendations.map((rec) => (\n+              <div\n+                key={rec.id}\n+                className=\"flex-shrink-0 w-72 bg-white border border-gray-200 rounded-md hover:shadow-sm transition-shadow\"\n+              >\n+                {/* Horizontal Layout: Square image + Content rectangle */}\n+                <div className=\"flex h-24\">\n+                  {/* Square Image */}\n+                  <div className=\"w-24 h-24 bg-gray-200 rounded-l-md overflow-hidden flex-shrink-0\">\n+                    {rec.photo ? (\n+                      <img\n+                        src={rec.photo}\n+                        alt={rec.name}\n+                        className=\"w-full h-full object-cover\"\n+                      />\n+                    ) : (\n+                      <div className=\"w-full h-full flex items-center justify-center bg-gray-100\">\n+                        <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n+                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n+                        </svg>\n+                      </div>\n+                    )}\n+                  </div>\n+\n+                  {/* Content Rectangle - Much Longer */}\n+                  <div className=\"flex-1 p-3 flex flex-col justify-between min-w-0\">\n+                    <div className=\"flex-1 min-w-0\">\n+                      <h4 className=\"font-medium text-gray-900 text-xs truncate\">{rec.name}</h4>\n+                      <p className=\"text-xs text-gray-500 mt-0.5 line-clamp-2\">{rec.description}</p>\n+                      \n+                      {/* Rating and Curated badge on same line */}\n+                      <div className=\"flex items-center justify-between mt-2\">\n+                        {rec.rating && (\n+                          <div className=\"flex items-center\">\n+                            <svg className=\"w-2.5 h-2.5 text-yellow-400 fill-current\" viewBox=\"0 0 20 20\">\n+                              <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n+                            </svg>\n+                            <span className=\"ml-0.5 text-xs text-gray-600\">{rec.rating}</span>\n+                          </div>\n+                        )}\n+                        \n+                        {/* Curated badge - Smaller */}\n+                        {rec.isCurated && (\n+                          <span className=\"inline-block px-1 py-0.5 text-xs bg-green-100 text-green-700 rounded-full\">\n+                            Curated\n+                          </span>\n+                        )}\n+                        \n+                        {/* Add button - Right aligned */}\n+                        <button\n+                          onClick={() => handleAddRecommendation(rec)}\n+                          className=\"w-4 h-4 bg-primary-600 text-white rounded-full flex items-center justify-center hover:bg-primary-700 transition-colors ml-1\"\n+                        >\n+                          <svg className=\"w-2.5 h-2.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n+                          </svg>\n+                        </button>\n+                      </div>\n+                    </div>\n+                  </div>\n+                </div>\n+              </div>\n+            ))}\n+          </div>\n+        )}\n+      </div>\n+    </div>\n+  );\n+}; \n\\ No newline at end of file\n"
                },
                {
                    "date": 1752495253585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -353,9 +353,9 @@\n     );\n   }\n \n   return (\n-    <div className=\"border-t border-gray-200 bg-white flex-1\">\n+    <div className=\"border-t border-gray-200 bg-white\">\n       {/* Category Filter - Hidden for now */}\n       <div className=\"hidden p-4 border-b border-gray-100\">\n         <div className=\"flex items-center justify-between mb-3\">\n           <h3 className=\"text-lg font-semibold text-gray-900\">Recommended places</h3>\n"
                },
                {
                    "date": 1752495261500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -379,9 +379,9 @@\n         <h3 className=\"text-sm font-medium text-gray-700\">Recommended places</h3>\n       </div>\n \n       {/* Horizontal Scrollable Cards - Much Smaller */}\n-      <div className=\"px-2 pt-2 pb-0\">\n+      <div className=\"px-2 pt-2 pb-3\">\n         {filteredRecommendations.length === 0 ? (\n           <div className=\"text-center py-4 text-gray-500\">\n             <p className=\"text-xs\">No recommendations found.</p>\n           </div>\n"
                },
                {
                    "date": 1752495380600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -385,9 +385,10 @@\n           <div className=\"text-center py-4 text-gray-500\">\n             <p className=\"text-xs\">No recommendations found.</p>\n           </div>\n         ) : (\n-          <div className=\"flex space-x-2 overflow-x-auto pb-1\">\n+          <div className=\"relative\">\n+            <div className=\"flex space-x-2 overflow-x-auto scrollbar-hide pb-1\">\n             {filteredRecommendations.map((rec) => (\n               <div\n                 key={rec.id}\n                 className=\"flex-shrink-0 w-72 bg-white border border-gray-200 rounded-md hover:shadow-sm transition-shadow\"\n"
                },
                {
                    "date": 1752495449998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -387,72 +387,84 @@\n           </div>\n         ) : (\n           <div className=\"relative\">\n             <div className=\"flex space-x-2 overflow-x-auto scrollbar-hide pb-1\">\n-            {filteredRecommendations.map((rec) => (\n-              <div\n-                key={rec.id}\n-                className=\"flex-shrink-0 w-72 bg-white border border-gray-200 rounded-md hover:shadow-sm transition-shadow\"\n-              >\n-                {/* Horizontal Layout: Square image + Content rectangle */}\n-                <div className=\"flex h-24\">\n-                  {/* Square Image */}\n-                  <div className=\"w-24 h-24 bg-gray-200 rounded-l-md overflow-hidden flex-shrink-0\">\n-                    {rec.photo ? (\n-                      <img\n-                        src={rec.photo}\n-                        alt={rec.name}\n-                        className=\"w-full h-full object-cover\"\n-                      />\n-                    ) : (\n-                      <div className=\"w-full h-full flex items-center justify-center bg-gray-100\">\n-                        <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n-                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n-                        </svg>\n-                      </div>\n-                    )}\n-                  </div>\n+              {filteredRecommendations.map((rec) => (\n+                <div\n+                  key={rec.id}\n+                  className=\"flex-shrink-0 w-72 bg-white border border-gray-200 rounded-md hover:shadow-sm transition-shadow\"\n+                >\n+                  {/* Horizontal Layout: Square image + Content rectangle */}\n+                  <div className=\"flex h-24\">\n+                    {/* Square Image */}\n+                    <div className=\"w-24 h-24 bg-gray-200 rounded-l-md overflow-hidden flex-shrink-0\">\n+                      {rec.photo ? (\n+                        <img\n+                          src={rec.photo}\n+                          alt={rec.name}\n+                          className=\"w-full h-full object-cover\"\n+                        />\n+                      ) : (\n+                        <div className=\"w-full h-full flex items-center justify-center bg-gray-100\">\n+                          <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n+                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n+                          </svg>\n+                        </div>\n+                      )}\n+                    </div>\n \n-                  {/* Content Rectangle - Much Longer */}\n-                  <div className=\"flex-1 p-3 flex flex-col justify-between min-w-0\">\n-                    <div className=\"flex-1 min-w-0\">\n-                      <h4 className=\"font-medium text-gray-900 text-xs truncate\">{rec.name}</h4>\n-                      <p className=\"text-xs text-gray-500 mt-0.5 line-clamp-2\">{rec.description}</p>\n-                      \n-                      {/* Rating and Curated badge on same line */}\n-                      <div className=\"flex items-center justify-between mt-2\">\n-                        {rec.rating && (\n-                          <div className=\"flex items-center\">\n-                            <svg className=\"w-2.5 h-2.5 text-yellow-400 fill-current\" viewBox=\"0 0 20 20\">\n-                              <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n+                    {/* Content Rectangle - Much Longer */}\n+                    <div className=\"flex-1 p-3 flex flex-col justify-between min-w-0\">\n+                      <div className=\"flex-1 min-w-0\">\n+                        <h4 className=\"font-medium text-gray-900 text-xs truncate\">{rec.name}</h4>\n+                        <p className=\"text-xs text-gray-500 mt-0.5 line-clamp-2\">{rec.description}</p>\n+                        \n+                        {/* Rating and Curated badge on same line */}\n+                        <div className=\"flex items-center justify-between mt-2\">\n+                          {rec.rating && (\n+                            <div className=\"flex items-center\">\n+                              <svg className=\"w-2.5 h-2.5 text-yellow-400 fill-current\" viewBox=\"0 0 20 20\">\n+                                <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n+                              </svg>\n+                              <span className=\"ml-0.5 text-xs text-gray-600\">{rec.rating}</span>\n+                            </div>\n+                          )}\n+                          \n+                          {/* Curated badge - Smaller */}\n+                          {rec.isCurated && (\n+                            <span className=\"inline-block px-1 py-0.5 text-xs bg-green-100 text-green-700 rounded-full\">\n+                              Curated\n+                            </span>\n+                          )}\n+                          \n+                          {/* Add button - Right aligned */}\n+                          <button\n+                            onClick={() => handleAddRecommendation(rec)}\n+                            className=\"w-4 h-4 bg-primary-600 text-white rounded-full flex items-center justify-center hover:bg-primary-700 transition-colors ml-1\"\n+                          >\n+                            <svg className=\"w-2.5 h-2.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                             </svg>\n-                            <span className=\"ml-0.5 text-xs text-gray-600\">{rec.rating}</span>\n-                          </div>\n-                        )}\n-                        \n-                        {/* Curated badge - Smaller */}\n-                        {rec.isCurated && (\n-                          <span className=\"inline-block px-1 py-0.5 text-xs bg-green-100 text-green-700 rounded-full\">\n-                            Curated\n-                          </span>\n-                        )}\n-                        \n-                        {/* Add button - Right aligned */}\n-                        <button\n-                          onClick={() => handleAddRecommendation(rec)}\n-                          className=\"w-4 h-4 bg-primary-600 text-white rounded-full flex items-center justify-center hover:bg-primary-700 transition-colors ml-1\"\n-                        >\n-                          <svg className=\"w-2.5 h-2.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n-                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n-                          </svg>\n-                        </button>\n+                          </button>\n+                        </div>\n                       </div>\n                     </div>\n                   </div>\n                 </div>\n+              ))}\n+            </div>\n+            \n+            {/* Scroll indicator arrow */}\n+            {filteredRecommendations.length > 0 && (\n+              <div className=\"absolute right-0 top-0 bottom-0 flex items-center pointer-events-none\">\n+                <div className=\"bg-gradient-to-l from-white via-white to-transparent w-8 h-full flex items-center justify-end pr-1\">\n+                  <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n+                  </svg>\n+                </div>\n               </div>\n-            ))}\n+            )}\n           </div>\n         )}\n       </div>\n     </div>\n"
                },
                {
                    "date": 1752495458509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -386,9 +386,9 @@\n             <p className=\"text-xs\">No recommendations found.</p>\n           </div>\n         ) : (\n           <div className=\"relative\">\n-            <div className=\"flex space-x-2 overflow-x-auto scrollbar-hide pb-1\">\n+            <div className=\"flex space-x-2 overflow-x-auto pb-1 scrollbar-hide\">\n               {filteredRecommendations.map((rec) => (\n                 <div\n                   key={rec.id}\n                   className=\"flex-shrink-0 w-72 bg-white border border-gray-200 rounded-md hover:shadow-sm transition-shadow\"\n"
                },
                {
                    "date": 1752495466818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -386,9 +386,11 @@\n             <p className=\"text-xs\">No recommendations found.</p>\n           </div>\n         ) : (\n           <div className=\"relative\">\n-            <div className=\"flex space-x-2 overflow-x-auto pb-1 scrollbar-hide\">\n+            <div className=\"flex space-x-2 overflow-x-auto pb-1 \n+                    scrollbar-thin scrollbar-thumb-gray-300 scrollbar-track-transparent\n+                    md:scrollbar-none\">\n               {filteredRecommendations.map((rec) => (\n                 <div\n                   key={rec.id}\n                   className=\"flex-shrink-0 w-72 bg-white border border-gray-200 rounded-md hover:shadow-sm transition-shadow\"\n"
                },
                {
                    "date": 1752495475154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -386,11 +386,15 @@\n             <p className=\"text-xs\">No recommendations found.</p>\n           </div>\n         ) : (\n           <div className=\"relative\">\n-            <div className=\"flex space-x-2 overflow-x-auto pb-1 \n-                    scrollbar-thin scrollbar-thumb-gray-300 scrollbar-track-transparent\n-                    md:scrollbar-none\">\n+            <div \n+              className=\"flex space-x-2 overflow-x-auto pb-1\"\n+              style={{\n+                scrollbarWidth: 'none',\n+                msOverflowStyle: 'none',\n+              }}\n+            >\n               {filteredRecommendations.map((rec) => (\n                 <div\n                   key={rec.id}\n                   className=\"flex-shrink-0 w-72 bg-white border border-gray-200 rounded-md hover:shadow-sm transition-shadow\"\n"
                },
                {
                    "date": 1752495483238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -393,8 +393,13 @@\n                 scrollbarWidth: 'none',\n                 msOverflowStyle: 'none',\n               }}\n             >\n+              <style jsx>{`\n+                div::-webkit-scrollbar {\n+                  display: none;\n+                }\n+              `}</style>\n               {filteredRecommendations.map((rec) => (\n                 <div\n                   key={rec.id}\n                   className=\"flex-shrink-0 w-72 bg-white border border-gray-200 rounded-md hover:shadow-sm transition-shadow\"\n"
                },
                {
                    "date": 1752495492245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -387,19 +387,14 @@\n           </div>\n         ) : (\n           <div className=\"relative\">\n             <div \n-              className=\"flex space-x-2 overflow-x-auto pb-1\"\n+              className=\"flex space-x-2 overflow-x-auto pb-1 no-scrollbar\"\n               style={{\n                 scrollbarWidth: 'none',\n                 msOverflowStyle: 'none',\n               }}\n             >\n-              <style jsx>{`\n-                div::-webkit-scrollbar {\n-                  display: none;\n-                }\n-              `}</style>\n               {filteredRecommendations.map((rec) => (\n                 <div\n                   key={rec.id}\n                   className=\"flex-shrink-0 w-72 bg-white border border-gray-200 rounded-md hover:shadow-sm transition-shadow\"\n"
                },
                {
                    "date": 1752495656935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,10 +111,13 @@\n   const [recommendations, setRecommendations] = useState<RecommendationItem[]>([]);\n   const [isLoading, setIsLoading] = useState(false);\n   const [error, setError] = useState<string | null>(null);\n   const [selectedCategory, setSelectedCategory] = useState<string>('all');\n+  const [showLeftArrow, setShowLeftArrow] = useState(false);\n+  const [showRightArrow, setShowRightArrow] = useState(false);\n   \n   const placesService = useRef<google.maps.places.PlacesService | null>(null);\n+  const scrollContainerRef = useRef<HTMLDivElement>(null);\n \n   // Initialize Google Places service\n   useEffect(() => {\n     const initPlacesService = () => {\n"
                },
                {
                    "date": 1752495669351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -309,8 +309,38 @@\n     \n     onDestinationAdd(newDestination);\n   };\n \n+  // Check scroll position and update arrow visibility\n+  const handleScroll = () => {\n+    if (!scrollContainerRef.current) return;\n+    \n+    const { scrollLeft, scrollWidth, clientWidth } = scrollContainerRef.current;\n+    \n+    setShowLeftArrow(scrollLeft > 0);\n+    setShowRightArrow(scrollLeft < scrollWidth - clientWidth - 1);\n+  };\n+\n+  // Scroll functions\n+  const scrollLeft = () => {\n+    if (scrollContainerRef.current) {\n+      scrollContainerRef.current.scrollBy({ left: -300, behavior: 'smooth' });\n+    }\n+  };\n+\n+  const scrollRight = () => {\n+    if (scrollContainerRef.current) {\n+      scrollContainerRef.current.scrollBy({ left: 300, behavior: 'smooth' });\n+    }\n+  };\n+\n+  // Update arrow visibility when recommendations change\n+  useEffect(() => {\n+    if (scrollContainerRef.current) {\n+      handleScroll();\n+    }\n+  }, [filteredRecommendations]);\n+\n   const categories = [\n     { value: 'all', label: 'All' },\n     { value: 'tourist_attraction', label: 'Attractions' },\n     { value: 'restaurant', label: 'Restaurants' },\n"
                },
                {
                    "date": 1752495676959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,15 +332,10 @@\n       scrollContainerRef.current.scrollBy({ left: 300, behavior: 'smooth' });\n     }\n   };\n \n-  // Update arrow visibility when recommendations change\n-  useEffect(() => {\n-    if (scrollContainerRef.current) {\n-      handleScroll();\n-    }\n-  }, [filteredRecommendations]);\n \n+\n   const categories = [\n     { value: 'all', label: 'All' },\n     { value: 'tourist_attraction', label: 'Attractions' },\n     { value: 'restaurant', label: 'Restaurants' },\n"
                },
                {
                    "date": 1752495689850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -415,13 +415,15 @@\n           </div>\n         ) : (\n           <div className=\"relative\">\n             <div \n+              ref={scrollContainerRef}\n               className=\"flex space-x-2 overflow-x-auto pb-1 no-scrollbar\"\n               style={{\n                 scrollbarWidth: 'none',\n                 msOverflowStyle: 'none',\n               }}\n+              onScroll={handleScroll}\n             >\n               {filteredRecommendations.map((rec) => (\n                 <div\n                   key={rec.id}\n"
                },
                {
                    "date": 1752495706102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -489,16 +489,33 @@\n                 </div>\n               ))}\n             </div>\n             \n-            {/* Scroll indicator arrow */}\n-            {filteredRecommendations.length > 0 && (\n-              <div className=\"absolute right-0 top-0 bottom-0 flex items-center pointer-events-none\">\n-                <div className=\"bg-gradient-to-l from-white via-white to-transparent w-8 h-full flex items-center justify-end pr-1\">\n-                  <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+            {/* Left scroll arrow */}\n+            {showLeftArrow && (\n+              <div className=\"absolute left-0 top-0 bottom-0 flex items-center z-10\">\n+                <button\n+                  onClick={scrollLeft}\n+                  className=\"bg-gradient-to-r from-white via-white to-transparent w-8 h-full flex items-center justify-start pl-1 hover:from-gray-50\"\n+                >\n+                  <svg className=\"w-4 h-4 text-gray-600 hover:text-gray-800\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n+                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n+                  </svg>\n+                </button>\n+              </div>\n+            )}\n+            \n+            {/* Right scroll arrow */}\n+            {showRightArrow && (\n+              <div className=\"absolute right-0 top-0 bottom-0 flex items-center z-10\">\n+                <button\n+                  onClick={scrollRight}\n+                  className=\"bg-gradient-to-l from-white via-white to-transparent w-8 h-full flex items-center justify-end pr-1 hover:from-gray-50\"\n+                >\n+                  <svg className=\"w-4 h-4 text-gray-600 hover:text-gray-800\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                     <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                   </svg>\n-                </div>\n+                </button>\n               </div>\n             )}\n           </div>\n         )}\n"
                },
                {
                    "date": 1752495725635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -347,8 +347,18 @@\n   const filteredRecommendations = selectedCategory === 'all' \n     ? recommendations \n     : recommendations.filter(rec => rec.category === selectedCategory);\n \n+  // Update arrow visibility when recommendations or category change\n+  useEffect(() => {\n+    if (scrollContainerRef.current) {\n+      // Small delay to ensure DOM is updated\n+      setTimeout(() => {\n+        handleScroll();\n+      }, 100);\n+    }\n+  }, [recommendations, selectedCategory]);\n+\n   if (!existingDestinations.length) {\n     return (\n       <div className=\"p-4 text-center text-gray-500\">\n         <svg className=\"w-12 h-12 mx-auto mb-3 text-gray-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n"
                },
                {
                    "date": 1752497639548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,8 +113,9 @@\n   const [error, setError] = useState<string | null>(null);\n   const [selectedCategory, setSelectedCategory] = useState<string>('all');\n   const [showLeftArrow, setShowLeftArrow] = useState(false);\n   const [showRightArrow, setShowRightArrow] = useState(false);\n+  const [isExpanded, setIsExpanded] = useState(true);\n   \n   const placesService = useRef<google.maps.places.PlacesService | null>(null);\n   const scrollContainerRef = useRef<HTMLDivElement>(null);\n \n"
                },
                {
                    "date": 1752497653197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -412,11 +412,24 @@\n           </select>\n         </div>\n       </div>\n \n-      {/* Compact Header */}\n+      {/* Collapsible Header */}\n       <div className=\"px-3 py-2 border-b border-gray-100\">\n-        <h3 className=\"text-sm font-medium text-gray-700\">Recommended places</h3>\n+        <button\n+          onClick={() => setIsExpanded(!isExpanded)}\n+          className=\"flex items-center justify-between w-full text-left hover:bg-gray-50 transition-colors rounded-md p-1 -m-1\"\n+        >\n+          <h3 className=\"text-sm font-medium text-gray-700\">Recommended places</h3>\n+          <svg \n+            className={`w-4 h-4 text-gray-500 transition-transform duration-200 ${isExpanded ? 'rotate-180' : ''}`}\n+            fill=\"none\" \n+            stroke=\"currentColor\" \n+            viewBox=\"0 0 24 24\"\n+          >\n+            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n+          </svg>\n+        </button>\n       </div>\n \n       {/* Horizontal Scrollable Cards - Much Smaller */}\n       <div className=\"px-2 pt-2 pb-3\">\n"
                },
                {
                    "date": 1752497664573,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -431,15 +431,16 @@\n         </button>\n       </div>\n \n       {/* Horizontal Scrollable Cards - Much Smaller */}\n-      <div className=\"px-2 pt-2 pb-3\">\n-        {filteredRecommendations.length === 0 ? (\n-          <div className=\"text-center py-4 text-gray-500\">\n-            <p className=\"text-xs\">No recommendations found.</p>\n-          </div>\n-        ) : (\n-          <div className=\"relative\">\n+      {isExpanded && (\n+        <div className=\"px-2 pt-2 pb-3\">\n+          {filteredRecommendations.length === 0 ? (\n+            <div className=\"text-center py-4 text-gray-500\">\n+              <p className=\"text-xs\">No recommendations found.</p>\n+            </div>\n+          ) : (\n+            <div className=\"relative\">\n             <div \n               ref={scrollContainerRef}\n               className=\"flex space-x-2 overflow-x-auto pb-1 no-scrollbar\"\n               style={{\n"
                },
                {
                    "date": 1752497687860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -544,7 +544,8 @@\n             )}\n           </div>\n         )}\n       </div>\n+      )}\n     </div>\n   );\n }; \n\\ No newline at end of file\n"
                },
                {
                    "date": 1752497699052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -348,17 +348,21 @@\n   const filteredRecommendations = selectedCategory === 'all' \n     ? recommendations \n     : recommendations.filter(rec => rec.category === selectedCategory);\n \n-  // Update arrow visibility when recommendations or category change\n+  // Update arrow visibility when recommendations, category, or expansion state change\n   useEffect(() => {\n-    if (scrollContainerRef.current) {\n+    if (isExpanded && scrollContainerRef.current) {\n       // Small delay to ensure DOM is updated\n       setTimeout(() => {\n         handleScroll();\n       }, 100);\n+    } else {\n+      // Hide arrows when collapsed\n+      setShowLeftArrow(false);\n+      setShowRightArrow(false);\n     }\n-  }, [recommendations, selectedCategory]);\n+  }, [recommendations, selectedCategory, isExpanded]);\n \n   if (!existingDestinations.length) {\n     return (\n       <div className=\"p-4 text-center text-gray-500\">\n"
                },
                {
                    "date": 1752497754217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -420,13 +420,13 @@\n       {/* Collapsible Header */}\n       <div className=\"px-3 py-2 border-b border-gray-100\">\n         <button\n           onClick={() => setIsExpanded(!isExpanded)}\n-          className=\"flex items-center justify-between w-full text-left hover:bg-gray-50 transition-colors rounded-md p-1 -m-1\"\n+          className=\"flex items-center w-full text-left hover:bg-gray-50 transition-colors rounded-md p-1 -m-1\"\n         >\n           <h3 className=\"text-sm font-medium text-gray-700\">Recommended places</h3>\n           <svg \n-            className={`w-4 h-4 text-gray-500 transition-transform duration-200 ${isExpanded ? 'rotate-180' : ''}`}\n+            className={`w-4 h-4 text-gray-500 transition-transform duration-200 ml-2 ${isExpanded ? 'rotate-180' : ''}`}\n             fill=\"none\" \n             stroke=\"currentColor\" \n             viewBox=\"0 0 24 24\"\n           >\n"
                },
                {
                    "date": 1752584902653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -288,8 +288,11 @@\n \n   const handleAddRecommendation = (rec: RecommendationItem) => {\n     const selectedDayData = tripDays.find(d => d.day === selectedDay);\n     \n+    const photos = (rec.photos && rec.photos.length > 0)\n+      ? rec.photos\n+      : (rec.photo ? [rec.photo] : []);\n     const newDestination: Destination = {\n       id: crypto.randomUUID(),\n       tripId: trip.id,\n       locationName: rec.name,\n@@ -302,9 +305,9 @@\n       placeId: rec.placeId,\n       category: rec.category,\n       rating: rec.rating,\n       priceLevel: rec.priceLevel,\n-      photos: rec.photos || [],\n+      photos,\n       createdAt: new Date(),\n       updatedAt: new Date(),\n     };\n     \n"
                }
            ],
            "date": 1752491349546,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { Trip, Destination, TripDay } from '@/types';\r\n\r\ninterface SmartRecommendationsProps {\r\n  trip: Trip;\r\n  tripDays: TripDay[];\r\n  selectedDay: number;\r\n  onDestinationAdd: (destination: Destination) => void;\r\n  existingDestinations: Destination[];\r\n}\r\n\r\ninterface RecommendationItem {\r\n  id: string;\r\n  name: string;\r\n  address: string;\r\n  lat: number;\r\n  lng: number;\r\n  category: string;\r\n  rating?: number;\r\n  priceLevel?: number;\r\n  photos?: string[];\r\n  description: string;\r\n  source: 'places' | 'curated';\r\n  placeId?: string;\r\n}\r\n\r\n// Curated recommendations based on location and context\r\nconst CURATED_RECOMMENDATIONS = {\r\n  tokyo: [\r\n    {\r\n      name: 'Senso-ji Temple',\r\n      address: '2-3-1 Asakusa, Taito City, Tokyo',\r\n      lat: 35.7148,\r\n      lng: 139.7967,\r\n      category: 'tourist_attraction',\r\n      description: 'Ancient Buddhist temple and Tokyo\\'s oldest temple',\r\n    },\r\n    {\r\n      name: 'Shibuya Crossing',\r\n      address: 'Shibuya City, Tokyo',\r\n      lat: 35.6598,\r\n      lng: 139.7006,\r\n      category: 'point_of_interest',\r\n      description: 'Famous scramble crossing and bustling district',\r\n    },\r\n    {\r\n      name: 'Tsukiji Outer Market',\r\n      address: 'Tsukiji, Chuo City, Tokyo',\r\n      lat: 35.6654,\r\n      lng: 139.7707,\r\n      category: 'food',\r\n      description: 'Fresh seafood market with street food',\r\n    },\r\n  ],\r\n  paris: [\r\n    {\r\n      name: 'Eiffel Tower',\r\n      address: 'Champ de Mars, 5 Avenue Anatole France, Paris',\r\n      lat: 48.8584,\r\n      lng: 2.2945,\r\n      category: 'tourist_attraction',\r\n      description: 'Iconic iron lattice tower and symbol of Paris',\r\n    },\r\n    {\r\n      name: 'Louvre Museum',\r\n      address: 'Rue de Rivoli, Paris',\r\n      lat: 48.8606,\r\n      lng: 2.3376,\r\n      category: 'museum',\r\n      description: 'World\\'s largest art museum and historic monument',\r\n    },\r\n  ],\r\n  london: [\r\n    {\r\n      name: 'Big Ben',\r\n      address: 'Westminster, London',\r\n      lat: 51.5007,\r\n      lng: -0.1246,\r\n      category: 'tourist_attraction',\r\n      description: 'Famous clock tower at Palace of Westminster',\r\n    },\r\n    {\r\n      name: 'Tower Bridge',\r\n      address: 'Tower Bridge Rd, London',\r\n      lat: 51.5055,\r\n      lng: -0.0754,\r\n      category: 'tourist_attraction',\r\n      description: 'Victorian Gothic bascule and suspension bridge',\r\n    },\r\n  ],\r\n};\r\n\r\nexport default function SmartRecommendations({\r\n  trip,\r\n  tripDays,\r\n  selectedDay,\r\n  onDestinationAdd,\r\n  existingDestinations,\r\n}: SmartRecommendationsProps) {\r\n  const [recommendations, setRecommendations] = useState<RecommendationItem[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [selectedCategory, setSelectedCategory] = useState<string>('all');\r\n  \r\n  const placesService = useRef<google.maps.places.PlacesService | null>(null);\r\n\r\n  // Initialize Google Places service\r\n  useEffect(() => {\r\n    const initPlacesService = () => {\r\n      if (window.google?.maps?.places) {\r\n        const mapDiv = document.createElement('div');\r\n        mapDiv.style.display = 'none';\r\n        document.body.appendChild(mapDiv);\r\n        \r\n        const map = new google.maps.Map(mapDiv, {\r\n          center: { lat: 0, lng: 0 },\r\n          zoom: 1\r\n        });\r\n        \r\n        placesService.current = new google.maps.places.PlacesService(map);\r\n      }\r\n    };\r\n\r\n    if (window.google?.maps?.places) {\r\n      initPlacesService();\r\n    } else {\r\n      // Wait for Google Maps to load\r\n      const checkGoogle = () => {\r\n        if (window.google?.maps?.places) {\r\n          initPlacesService();\r\n        } else {\r\n          setTimeout(checkGoogle, 100);\r\n        }\r\n      };\r\n      checkGoogle();\r\n    }\r\n  }, []);\r\n\r\n  // Generate recommendations based on existing destinations and trip context\r\n  useEffect(() => {\r\n    generateRecommendations();\r\n  }, [selectedDay, existingDestinations, trip]);\r\n\r\n  const generateRecommendations = async () => {\r\n    if (!existingDestinations.length) return;\r\n    \r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const newRecommendations: RecommendationItem[] = [];\r\n      \r\n      // Get curated recommendations based on trip location\r\n      const curatedRecs = getCuratedRecommendations();\r\n      newRecommendations.push(...curatedRecs);\r\n      \r\n      // Get Google Places recommendations near existing destinations\r\n      if (placesService.current) {\r\n        const placesRecs = await getPlacesRecommendations();\r\n        newRecommendations.push(...placesRecs);\r\n      }\r\n      \r\n      // Filter out destinations that already exist in the trip\r\n      const filteredRecs = newRecommendations.filter(rec => \r\n        !existingDestinations.some(dest => \r\n          Math.abs(dest.lat - rec.lat) < 0.001 && \r\n          Math.abs(dest.lng - rec.lng) < 0.001\r\n        )\r\n      );\r\n      \r\n      // Sort by rating and remove duplicates\r\n      const uniqueRecs = filteredRecs.reduce((acc, current) => {\r\n        const exists = acc.find(item => \r\n          item.name === current.name || \r\n          (Math.abs(item.lat - current.lat) < 0.0001 && Math.abs(item.lng - current.lng) < 0.0001)\r\n        );\r\n        if (!exists) {\r\n          acc.push(current);\r\n        }\r\n        return acc;\r\n      }, [] as RecommendationItem[]);\r\n      \r\n      setRecommendations(uniqueRecs.slice(0, 12)); // Limit to 12 recommendations\r\n      \r\n    } catch (err) {\r\n      console.error('Error generating recommendations:', err);\r\n      setError('Failed to load recommendations');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const getCuratedRecommendations = (): RecommendationItem[] => {\r\n    const location = trip.location.toLowerCase();\r\n    const curated: RecommendationItem[] = [];\r\n    \r\n    // Check if trip location matches any curated locations\r\n    Object.entries(CURATED_RECOMMENDATIONS).forEach(([city, recs]) => {\r\n      if (location.includes(city)) {\r\n        recs.forEach((rec, index) => {\r\n          curated.push({\r\n            id: `curated-${city}-${index}`,\r\n            ...rec,\r\n            source: 'curated',\r\n          });\r\n        });\r\n      }\r\n    });\r\n    \r\n    return curated;\r\n  };\r\n\r\n  const getPlacesRecommendations = (): Promise<RecommendationItem[]> => {\r\n    return new Promise((resolve) => {\r\n      if (!placesService.current || !existingDestinations.length) {\r\n        resolve([]);\r\n        return;\r\n      }\r\n\r\n      const recommendations: RecommendationItem[] = [];\r\n      let completedSearches = 0;\r\n      const totalSearches = Math.min(existingDestinations.length, 3); // Limit API calls\r\n      \r\n      if (totalSearches === 0) {\r\n        resolve([]);\r\n        return;\r\n      }\r\n\r\n      // Search near each existing destination\r\n      existingDestinations.slice(0, 3).forEach((destination, index) => {\r\n        const request: google.maps.places.PlaceSearchRequest = {\r\n          location: new google.maps.LatLng(destination.lat, destination.lng),\r\n          radius: 2000, // 2km radius\r\n          type: 'tourist_attraction',\r\n        };\r\n\r\n        placesService.current!.nearbySearch(request, (results, status) => {\r\n          if (status === google.maps.places.PlacesServiceStatus.OK && results) {\r\n            results.slice(0, 4).forEach((place, placeIndex) => {\r\n              if (place.geometry?.location && place.name) {\r\n                recommendations.push({\r\n                  id: `places-${index}-${placeIndex}`,\r\n                  name: place.name,\r\n                  address: place.vicinity || place.formatted_address || '',\r\n                  lat: place.geometry.location.lat(),\r\n                  lng: place.geometry.location.lng(),\r\n                  category: place.types?.[0] || 'tourist_attraction',\r\n                  rating: place.rating,\r\n                  priceLevel: place.price_level,\r\n                  photos: place.photos?.slice(0, 1).map(photo => \r\n                    photo.getUrl({ maxWidth: 300, maxHeight: 200 })\r\n                  ) || [],\r\n                  description: `Popular ${place.types?.[0]?.replace(/_/g, ' ') || 'attraction'} near ${destination.locationName}`,\r\n                  source: 'places',\r\n                  placeId: place.place_id,\r\n                });\r\n              }\r\n            });\r\n          }\r\n          \r\n          completedSearches++;\r\n          if (completedSearches === totalSearches) {\r\n            resolve(recommendations);\r\n          }\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  const handleAddRecommendation = (rec: RecommendationItem) => {\r\n    const selectedDayData = tripDays.find(d => d.day === selectedDay);\r\n    \r\n    const newDestination: Destination = {\r\n      id: crypto.randomUUID(),\r\n      tripId: trip.id,\r\n      locationName: rec.name,\r\n      address: rec.address,\r\n      lat: rec.lat,\r\n      lng: rec.lng,\r\n      day: selectedDay,\r\n      orderIndex: (selectedDayData?.destinations.length || 0) + 1,\r\n      notes: rec.description,\r\n      placeId: rec.placeId,\r\n      category: rec.category,\r\n      rating: rec.rating,\r\n      priceLevel: rec.priceLevel,\r\n      photos: rec.photos || [],\r\n      createdAt: new Date(),\r\n      updatedAt: new Date(),\r\n    };\r\n    \r\n    onDestinationAdd(newDestination);\r\n  };\r\n\r\n  const categories = [\r\n    { value: 'all', label: 'All' },\r\n    { value: 'tourist_attraction', label: 'Attractions' },\r\n    { value: 'restaurant', label: 'Restaurants' },\r\n    { value: 'museum', label: 'Museums' },\r\n    { value: 'shopping_mall', label: 'Shopping' },\r\n    { value: 'park', label: 'Parks' },\r\n  ];\r\n\r\n  const filteredRecommendations = selectedCategory === 'all' \r\n    ? recommendations \r\n    : recommendations.filter(rec => rec.category === selectedCategory);\r\n\r\n  if (!existingDestinations.length) {\r\n    return (\r\n      <div className=\"p-4 text-center text-gray-500\">\r\n        <svg className=\"w-12 h-12 mx-auto mb-3 text-gray-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n        </svg>\r\n        <p className=\"text-sm\">Add some destinations to get smart recommendations</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-4 border-t border-gray-200\">\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900\">Smart Recommendations</h3>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <select\r\n            value={selectedCategory}\r\n            onChange={(e) => setSelectedCategory(e.target.value)}\r\n            className=\"text-sm border border-gray-300 rounded-lg px-2 py-1 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n          >\r\n            {categories.map(cat => (\r\n              <option key={cat.value} value={cat.value}>{cat.label}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\r\n          <p className=\"text-red-700 text-sm\">{error}</p>\r\n        </div>\r\n      )}\r\n\r\n      {isLoading && (\r\n        <div className=\"flex items-center justify-center py-8\">\r\n          <div className=\"animate-spin rounded-full h-6 w-6 border-2 border-primary-600 border-t-transparent\"></div>\r\n          <span className=\"ml-2 text-sm text-gray-600\">Finding recommendations...</span>\r\n        </div>\r\n      )}\r\n\r\n      {!isLoading && filteredRecommendations.length === 0 && !error && (\r\n        <div className=\"text-center py-8 text-gray-500\">\r\n          <p className=\"text-sm\">No recommendations found for this category</p>\r\n        </div>\r\n      )}\r\n\r\n      {!isLoading && filteredRecommendations.length > 0 && (\r\n        <div className=\"grid grid-cols-1 gap-3\">\r\n          {filteredRecommendations.map((rec) => (\r\n            <div key={rec.id} className=\"bg-gray-50 rounded-lg p-3 hover:bg-gray-100 transition-colors\">\r\n              <div className=\"flex items-start justify-between\">\r\n                <div className=\"flex-1 min-w-0\">\r\n                  <div className=\"flex items-center space-x-2 mb-1\">\r\n                    <h4 className=\"font-medium text-gray-900 truncate\">{rec.name}</h4>\r\n                    {rec.source === 'curated' && (\r\n                      <span className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 text-blue-800\">\r\n                        Curated\r\n                      </span>\r\n                    )}\r\n                    {rec.rating && (\r\n                      <div className=\"flex items-center\">\r\n                        <svg className=\"w-3 h-3 text-yellow-400 fill-current\" viewBox=\"0 0 20 20\">\r\n                          <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n                        </svg>\r\n                        <span className=\"ml-1 text-xs text-gray-600\">{rec.rating}</span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <p className=\"text-sm text-gray-600 mb-1\">{rec.address}</p>\r\n                  <p className=\"text-xs text-gray-500\">{rec.description}</p>\r\n                </div>\r\n                <button\r\n                  onClick={() => handleAddRecommendation(rec)}\r\n                  className=\"ml-3 px-3 py-1 bg-primary-600 text-white text-sm rounded-lg hover:bg-primary-700 transition-colors flex-shrink-0\"\r\n                >\r\n                  Add\r\n                </button>\r\n              </div>\r\n              \r\n              {rec.photos && rec.photos.length > 0 && (\r\n                <div className=\"mt-2\">\r\n                  <img \r\n                    src={rec.photos[0]} \r\n                    alt={rec.name}\r\n                    className=\"w-full h-24 object-cover rounded-lg\"\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "
        }
    ]
}