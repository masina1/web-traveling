{
    "sourceFile": "app/trip/[id]/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 18,
            "patches": [
                {
                    "date": 1752433573907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752440871897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,10 +3,10 @@\n import { useEffect, useState } from 'react';\r\n import { useParams, useRouter } from 'next/navigation';\r\n import { useAuth } from '@/lib/auth-context';\r\n import { getTrip } from '@/lib/trip-service';\r\n-import { getTripDestinations } from '@/lib/destination-service';\r\n-import { Trip, Destination, TripDay, getDayColor } from '@/types';\r\n+import { getTripDestinations, createDestination } from '@/lib/destination-service';\r\n+import { Trip, Destination, TripDay, getDayColor, CreateDestinationData } from '@/types';\r\n import { format, parseISO, differenceInDays, addDays } from 'date-fns';\r\n import Link from 'next/link';\r\n import TripMap from '@/components/map/TripMap';\r\n import ItineraryPanel from '@/components/trip/ItineraryPanel';\r\n@@ -100,8 +100,60 @@\n     setSelectedDay(day);\r\n     setSelectedDestination(null);\r\n   };\r\n \r\n+  // Handle adding a new destination from map\r\n+  const handleDestinationAdd = async (destinationData: Destination) => {\r\n+    try {\r\n+      // Create the destination data for saving to database\r\n+      const createData: CreateDestinationData = {\r\n+        tripId: destinationData.tripId,\r\n+        locationName: destinationData.locationName,\r\n+        address: destinationData.address,\r\n+        lat: destinationData.lat,\r\n+        lng: destinationData.lng,\r\n+        day: destinationData.day,\r\n+        orderIndex: destinationData.orderIndex,\r\n+        startTime: destinationData.startTime,\r\n+        endTime: destinationData.endTime,\r\n+        notes: destinationData.notes,\r\n+        placeId: destinationData.placeId,\r\n+        category: destinationData.category,\r\n+        rating: destinationData.rating,\r\n+        priceLevel: destinationData.priceLevel,\r\n+        photos: destinationData.photos,\r\n+      };\r\n+\r\n+      // Save to database\r\n+      const newDestinationId = await createDestination(createData);\r\n+      \r\n+      // Create the full destination object with the new ID\r\n+      const newDestination: Destination = {\r\n+        ...destinationData,\r\n+        id: newDestinationId,\r\n+        createdAt: new Date(),\r\n+        updatedAt: new Date(),\r\n+      };\r\n+\r\n+      // Update destinations state\r\n+      setDestinations(prev => [...prev, newDestination]);\r\n+\r\n+      // Update tripDays state to include the new destination in the correct day\r\n+      setTripDays(prev => prev.map(day => \r\n+        day.day === newDestination.day \r\n+          ? { ...day, destinations: [...day.destinations, newDestination] }\r\n+          : day\r\n+      ));\r\n+\r\n+      // Auto-select the new destination\r\n+      setSelectedDestination(newDestination);\r\n+      \r\n+    } catch (error) {\r\n+      console.error('Error adding destination:', error);\r\n+      setError('Failed to add destination');\r\n+    }\r\n+  };\r\n+\r\n   if (loading || isLoading) {\r\n     return (\r\n       <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n         <div className=\"text-center\">\r\n@@ -214,11 +266,9 @@\n               tripDays={tripDays}\r\n               selectedDestination={selectedDestination}\r\n               selectedDay={selectedDay}\r\n               onDestinationSelect={handleDestinationSelect}\r\n-              onDestinationAdd={(destination) => {\r\n-                setDestinations(prev => [...prev, destination]);\r\n-              }}\r\n+              onDestinationAdd={handleDestinationAdd}\r\n             />\r\n           </div>\r\n         </div>\r\n       </div>\r\n"
                },
                {
                    "date": 1752440893137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,9 +139,13 @@\n \r\n       // Update tripDays state to include the new destination in the correct day\r\n       setTripDays(prev => prev.map(day => \r\n         day.day === newDestination.day \r\n-          ? { ...day, destinations: [...day.destinations, newDestination] }\r\n+          ? { \r\n+              ...day, \r\n+              destinations: [...day.destinations, newDestination]\r\n+                .sort((a, b) => a.orderIndex - b.orderIndex)\r\n+            }\r\n           : day\r\n       ));\r\n \r\n       // Auto-select the new destination\r\n"
                },
                {
                    "date": 1752440909113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,9 @@\n   const [isLoading, setIsLoading] = useState(true);\r\n   const [error, setError] = useState<string | null>(null);\r\n   const [selectedDestination, setSelectedDestination] = useState<Destination | null>(null);\r\n   const [selectedDay, setSelectedDay] = useState<number>(1);\r\n+  const [isAddingDestination, setIsAddingDestination] = useState(false);\r\n \r\n   // Redirect if not authenticated\r\n   useEffect(() => {\r\n     if (!loading && !user) {\r\n@@ -103,8 +104,11 @@\n \r\n   // Handle adding a new destination from map\r\n   const handleDestinationAdd = async (destinationData: Destination) => {\r\n     try {\r\n+      setIsAddingDestination(true);\r\n+      setError(null);\r\n+\r\n       // Create the destination data for saving to database\r\n       const createData: CreateDestinationData = {\r\n         tripId: destinationData.tripId,\r\n         locationName: destinationData.locationName,\r\n@@ -152,9 +156,11 @@\n       setSelectedDestination(newDestination);\r\n       \r\n     } catch (error) {\r\n       console.error('Error adding destination:', error);\r\n-      setError('Failed to add destination');\r\n+      setError('Failed to add destination. Please try again.');\r\n+    } finally {\r\n+      setIsAddingDestination(false);\r\n     }\r\n   };\r\n \r\n   if (loading || isLoading) {\r\n"
                },
                {
                    "date": 1752440919568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -277,8 +277,9 @@\n               selectedDestination={selectedDestination}\r\n               selectedDay={selectedDay}\r\n               onDestinationSelect={handleDestinationSelect}\r\n               onDestinationAdd={handleDestinationAdd}\r\n+              isAddingDestination={isAddingDestination}\r\n             />\r\n           </div>\r\n         </div>\r\n       </div>\r\n"
                },
                {
                    "date": 1752441442271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,8 +107,15 @@\n     try {\r\n       setIsAddingDestination(true);\r\n       setError(null);\r\n \r\n+      console.log('Adding destination from map:', destinationData);\r\n+\r\n+      // Validate the destination data before sending to database\r\n+      if (!destinationData.tripId || !destinationData.locationName || !destinationData.address) {\r\n+        throw new Error('Missing required destination information');\r\n+      }\r\n+\r\n       // Create the destination data for saving to database\r\n       const createData: CreateDestinationData = {\r\n         tripId: destinationData.tripId,\r\n         locationName: destinationData.locationName,\r\n@@ -126,11 +133,15 @@\n         priceLevel: destinationData.priceLevel,\r\n         photos: destinationData.photos,\r\n       };\r\n \r\n+      console.log('Sending to database:', createData);\r\n+\r\n       // Save to database\r\n       const newDestinationId = await createDestination(createData);\r\n       \r\n+      console.log('Destination created with ID:', newDestinationId);\r\n+\r\n       // Create the full destination object with the new ID\r\n       const newDestination: Destination = {\r\n         ...destinationData,\r\n         id: newDestinationId,\r\n@@ -154,11 +165,31 @@\n \r\n       // Auto-select the new destination\r\n       setSelectedDestination(newDestination);\r\n       \r\n+      console.log('Destination added successfully');\r\n+      \r\n     } catch (error) {\r\n       console.error('Error adding destination:', error);\r\n-      setError('Failed to add destination. Please try again.');\r\n+      \r\n+      // Provide more specific error messages\r\n+      let errorMessage = 'Failed to add destination. ';\r\n+      \r\n+      if (error instanceof Error) {\r\n+        if (error.message.includes('permission')) {\r\n+          errorMessage += 'Permission denied. Please check your login status.';\r\n+        } else if (error.message.includes('network')) {\r\n+          errorMessage += 'Network error. Please check your internet connection.';\r\n+        } else if (error.message.includes('required')) {\r\n+          errorMessage += 'Missing required information from the location.';\r\n+        } else {\r\n+          errorMessage += error.message;\r\n+        }\r\n+      } else {\r\n+        errorMessage += 'Please try again.';\r\n+      }\r\n+      \r\n+      setError(errorMessage);\r\n     } finally {\r\n       setIsAddingDestination(false);\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1752441498337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n   const [error, setError] = useState<string | null>(null);\r\n   const [selectedDestination, setSelectedDestination] = useState<Destination | null>(null);\r\n   const [selectedDay, setSelectedDay] = useState<number>(1);\r\n   const [isAddingDestination, setIsAddingDestination] = useState(false);\r\n+  const [successMessage, setSuccessMessage] = useState<string | null>(null);\r\n \r\n   // Redirect if not authenticated\r\n   useEffect(() => {\r\n     if (!loading && !user) {\r\n@@ -106,8 +107,9 @@\n   const handleDestinationAdd = async (destinationData: Destination) => {\r\n     try {\r\n       setIsAddingDestination(true);\r\n       setError(null);\r\n+      setSuccessMessage(null);\r\n \r\n       console.log('Adding destination from map:', destinationData);\r\n \r\n       // Validate the destination data before sending to database\r\n@@ -165,8 +167,14 @@\n \r\n       // Auto-select the new destination\r\n       setSelectedDestination(newDestination);\r\n       \r\n+      // Show success message\r\n+      setSuccessMessage(`Added \"${newDestination.locationName}\" to Day ${newDestination.day}`);\r\n+      \r\n+      // Clear success message after 3 seconds\r\n+      setTimeout(() => setSuccessMessage(null), 3000);\r\n+      \r\n       console.log('Destination added successfully');\r\n       \r\n     } catch (error) {\r\n       console.error('Error adding destination:', error);\r\n@@ -284,8 +292,22 @@\n       </div>\r\n \r\n       {/* Main Content - 45%/55% Split */}\r\n       <div className=\"max-w-7xl mx-auto p-4\">\r\n+        {/* Success Message */}\r\n+        {successMessage && (\r\n+          <div className=\"mb-4 p-3 bg-green-50 border border-green-200 rounded-lg\">\r\n+            <p className=\"text-green-700 text-sm\">✅ {successMessage}</p>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Error Message */}\r\n+        {error && (\r\n+          <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\r\n+            <p className=\"text-red-700 text-sm\">❌ {error}</p>\r\n+          </div>\r\n+        )}\r\n+\r\n         <div className=\"flex h-[calc(100vh-200px)] gap-4\">\r\n           {/* Left Panel - Itinerary (45%) */}\r\n           <div className=\"w-[45%] bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\">\r\n             <ItineraryPanel\r\n"
                },
                {
                    "date": 1752441854758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,8 +102,24 @@\n     setSelectedDay(day);\r\n     setSelectedDestination(null);\r\n   };\r\n \r\n+  // Handle destinations change (reordering, etc.)\r\n+  const handleDestinationsChange = (newDestinations: Destination[]) => {\r\n+    // Update destinations state\r\n+    setDestinations(newDestinations);\r\n+    \r\n+    // Update tripDays state to reflect the new order\r\n+    const updatedTripDays = tripDays.map(day => ({\r\n+      ...day,\r\n+      destinations: newDestinations\r\n+        .filter(dest => dest.day === day.day)\r\n+        .sort((a, b) => a.orderIndex - b.orderIndex)\r\n+    }));\r\n+    \r\n+    setTripDays(updatedTripDays);\r\n+  };\r\n+\r\n   // Handle adding a new destination from map\r\n   const handleDestinationAdd = async (destinationData: Destination) => {\r\n     try {\r\n       setIsAddingDestination(true);\r\n@@ -316,9 +332,9 @@\n               selectedDay={selectedDay}\r\n               selectedDestination={selectedDestination}\r\n               onDaySelect={handleDaySelect}\r\n               onDestinationSelect={handleDestinationSelect}\r\n-              onDestinationsChange={setDestinations}\r\n+              onDestinationsChange={handleDestinationsChange}\r\n             />\r\n           </div>\r\n \r\n           {/* Right Panel - Map (55%) */}\r\n"
                },
                {
                    "date": 1752443310320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -333,8 +333,9 @@\n               selectedDestination={selectedDestination}\r\n               onDaySelect={handleDaySelect}\r\n               onDestinationSelect={handleDestinationSelect}\r\n               onDestinationsChange={handleDestinationsChange}\r\n+              onLocationSelect={handleDestinationAdd}\r\n             />\r\n           </div>\r\n \r\n           {/* Right Panel - Map (55%) */}\r\n"
                },
                {
                    "date": 1752443335146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,12 @@\n   const [selectedDestination, setSelectedDestination] = useState<Destination | null>(null);\r\n   const [selectedDay, setSelectedDay] = useState<number>(1);\r\n   const [isAddingDestination, setIsAddingDestination] = useState(false);\r\n   const [successMessage, setSuccessMessage] = useState<string | null>(null);\r\n+  \r\n+  // Mobile responsive state\r\n+  const [isMobileMapOpen, setIsMobileMapOpen] = useState(false);\r\n+  const [isMobileItineraryOpen, setIsMobileItineraryOpen] = useState(true);\r\n \r\n   // Redirect if not authenticated\r\n   useEffect(() => {\r\n     if (!loading && !user) {\r\n"
                },
                {
                    "date": 1752443365536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -326,11 +326,55 @@\n             <p className=\"text-red-700 text-sm\">❌ {error}</p>\r\n           </div>\r\n         )}\r\n \r\n-        <div className=\"flex h-[calc(100vh-200px)] gap-4\">\r\n-          {/* Left Panel - Itinerary (45%) */}\r\n-          <div className=\"w-[45%] bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\">\r\n+        {/* Mobile Toggle Buttons */}\r\n+        <div className=\"lg:hidden flex justify-center mb-4\">\r\n+          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-1 flex\">\r\n+            <button\r\n+              onClick={() => {\r\n+                setIsMobileItineraryOpen(true);\r\n+                setIsMobileMapOpen(false);\r\n+              }}\r\n+              className={`px-4 py-2 rounded-lg font-medium transition-colors ${\r\n+                isMobileItineraryOpen\r\n+                  ? 'bg-primary-600 text-white shadow-sm'\r\n+                  : 'text-gray-700 hover:bg-gray-50'\r\n+              }`}\r\n+            >\r\n+              <svg className=\"w-4 h-4 mr-2 inline\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\r\n+              </svg>\r\n+              Itinerary\r\n+            </button>\r\n+            <button\r\n+              onClick={() => {\r\n+                setIsMobileMapOpen(true);\r\n+                setIsMobileItineraryOpen(false);\r\n+              }}\r\n+              className={`px-4 py-2 rounded-lg font-medium transition-colors ${\r\n+                isMobileMapOpen\r\n+                  ? 'bg-primary-600 text-white shadow-sm'\r\n+                  : 'text-gray-700 hover:bg-gray-50'\r\n+              }`}\r\n+            >\r\n+              <svg className=\"w-4 h-4 mr-2 inline\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-1.447-.894L15 4m0 13V4m-6 3l6-3\" />\r\n+              </svg>\r\n+              Map\r\n+            </button>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Desktop: Side-by-side layout | Mobile: Stacked with toggle */}\r\n+        <div className=\"lg:flex lg:h-[calc(100vh-200px)] lg:gap-4\">\r\n+          {/* Left Panel - Itinerary (45% on desktop, full width on mobile) */}\r\n+          <div className={`\r\n+            lg:w-[45%] lg:block\r\n+            ${isMobileItineraryOpen ? 'block' : 'hidden lg:block'}\r\n+            bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\r\n+            ${isMobileItineraryOpen ? 'h-[calc(100vh-250px)]' : 'lg:h-auto'}\r\n+          `}>\r\n             <ItineraryPanel\r\n               trip={trip}\r\n               tripDays={tripDays}\r\n               selectedDay={selectedDay}\r\n@@ -341,10 +385,15 @@\n               onLocationSelect={handleDestinationAdd}\r\n             />\r\n           </div>\r\n \r\n-          {/* Right Panel - Map (55%) */}\r\n-          <div className=\"w-[55%] bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\">\r\n+          {/* Right Panel - Map (55% on desktop, full width on mobile) */}\r\n+          <div className={`\r\n+            lg:w-[55%] lg:block\r\n+            ${isMobileMapOpen ? 'block' : 'hidden lg:block'}\r\n+            bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\r\n+            ${isMobileMapOpen ? 'h-[calc(100vh-250px)]' : 'lg:h-auto'}\r\n+          `}>\r\n             <TripMap\r\n               trip={trip}\r\n               destinations={destinations}\r\n               tripDays={tripDays}\r\n"
                },
                {
                    "date": 1752479803867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -311,9 +311,9 @@\n         </div>\r\n       </div>\r\n \r\n       {/* Main Content - 45%/55% Split */}\r\n-      <div className=\"max-w-7xl mx-auto p-4\">\r\n+      <div className=\"max-w-full xl:max-w-7xl 2xl:max-w-8xl mx-auto p-4\">\r\n         {/* Success Message */}\r\n         {successMessage && (\r\n           <div className=\"mb-4 p-3 bg-green-50 border border-green-200 rounded-lg\">\r\n             <p className=\"text-green-700 text-sm\">✅ {successMessage}</p>\r\n"
                },
                {
                    "date": 1752479823508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -365,9 +365,9 @@\n           </div>\r\n         </div>\r\n \r\n         {/* Desktop: Side-by-side layout | Mobile: Stacked with toggle */}\r\n-        <div className=\"lg:flex lg:h-[calc(100vh-200px)] lg:gap-4\">\r\n+        <div className=\"lg:flex lg:h-[calc(100vh-200px)] xl:h-[calc(100vh-180px)] 2xl:h-[calc(100vh-160px)] lg:gap-4 xl:gap-6\">\r\n           {/* Left Panel - Itinerary (45% on desktop, full width on mobile) */}\r\n           <div className={`\r\n             lg:w-[45%] lg:block\r\n             ${isMobileItineraryOpen ? 'block' : 'hidden lg:block'}\r\n"
                },
                {
                    "date": 1752479837961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -366,11 +366,11 @@\n         </div>\r\n \r\n         {/* Desktop: Side-by-side layout | Mobile: Stacked with toggle */}\r\n         <div className=\"lg:flex lg:h-[calc(100vh-200px)] xl:h-[calc(100vh-180px)] 2xl:h-[calc(100vh-160px)] lg:gap-4 xl:gap-6\">\r\n-          {/* Left Panel - Itinerary (45% on desktop, full width on mobile) */}\r\n+          {/* Left Panel - Itinerary (45% on desktop, 40% on ultra-wide) */}\r\n           <div className={`\r\n-            lg:w-[45%] lg:block\r\n+            lg:w-[45%] 2xl:w-[40%] lg:block\r\n             ${isMobileItineraryOpen ? 'block' : 'hidden lg:block'}\r\n             bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\r\n             ${isMobileItineraryOpen ? 'h-[calc(100vh-250px)]' : 'lg:h-auto'}\r\n           `}>\r\n@@ -385,11 +385,11 @@\n               onLocationSelect={handleDestinationAdd}\r\n             />\r\n           </div>\r\n \r\n-          {/* Right Panel - Map (55% on desktop, full width on mobile) */}\r\n+          {/* Right Panel - Map (55% on desktop, 60% on ultra-wide) */}\r\n           <div className={`\r\n-            lg:w-[55%] lg:block\r\n+            lg:w-[55%] 2xl:w-[60%] lg:block\r\n             ${isMobileMapOpen ? 'block' : 'hidden lg:block'}\r\n             bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\r\n             ${isMobileMapOpen ? 'h-[calc(100vh-250px)]' : 'lg:h-auto'}\r\n           `}>\r\n"
                },
                {
                    "date": 1752479887441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { useEffect, useState } from 'react';\r\n import { useParams, useRouter } from 'next/navigation';\r\n import { useAuth } from '@/lib/auth-context';\r\n import { getTrip } from '@/lib/trip-service';\r\n-import { getTripDestinations, createDestination } from '@/lib/destination-service';\r\n+import { getTripDestinations, createDestination, deleteDestination } from '@/lib/destination-service';\r\n import { Trip, Destination, TripDay, getDayColor, CreateDestinationData } from '@/types';\r\n import { format, parseISO, differenceInDays, addDays } from 'date-fns';\r\n import Link from 'next/link';\r\n import TripMap from '@/components/map/TripMap';\r\n"
                },
                {
                    "date": 1752479946073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -221,8 +221,74 @@\n       setIsAddingDestination(false);\r\n     }\r\n   };\r\n \r\n+  const handleDestinationDelete = async (destinationId: string) => {\r\n+    try {\r\n+      setError(null);\r\n+      \r\n+      // Find the destination to delete\r\n+      const destinationToDelete = destinations.find(d => d.id === destinationId);\r\n+      if (!destinationToDelete) {\r\n+        setError('Destination not found');\r\n+        return;\r\n+      }\r\n+\r\n+      // Show confirmation dialog\r\n+      const isConfirmed = window.confirm(\r\n+        `Are you sure you want to delete \"${destinationToDelete.locationName}\"? This action cannot be undone.`\r\n+      );\r\n+      \r\n+      if (!isConfirmed) {\r\n+        return;\r\n+      }\r\n+\r\n+      // Delete from database\r\n+      await deleteDestination(destinationId);\r\n+\r\n+      // Update destinations state\r\n+      setDestinations(prev => prev.filter(d => d.id !== destinationId));\r\n+\r\n+      // Update tripDays state to remove the destination\r\n+      setTripDays(prev => prev.map(day => ({\r\n+        ...day,\r\n+        destinations: day.destinations.filter(d => d.id !== destinationId)\r\n+      })));\r\n+\r\n+      // Clear selected destination if it was the deleted one\r\n+      if (selectedDestination?.id === destinationId) {\r\n+        setSelectedDestination(null);\r\n+      }\r\n+\r\n+      // Show success message\r\n+      setSuccessMessage(`Deleted \"${destinationToDelete.locationName}\" from Day ${destinationToDelete.day}`);\r\n+      \r\n+      // Clear success message after 3 seconds\r\n+      setTimeout(() => setSuccessMessage(null), 3000);\r\n+      \r\n+      console.log('Destination deleted successfully');\r\n+      \r\n+    } catch (error) {\r\n+      console.error('Error deleting destination:', error);\r\n+      \r\n+      let errorMessage = 'Failed to delete destination. ';\r\n+      \r\n+      if (error instanceof Error) {\r\n+        if (error.message.includes('permission')) {\r\n+          errorMessage += 'Permission denied. Please check your login status.';\r\n+        } else if (error.message.includes('network')) {\r\n+          errorMessage += 'Network error. Please check your internet connection.';\r\n+        } else {\r\n+          errorMessage += error.message;\r\n+        }\r\n+      } else {\r\n+        errorMessage += 'Please try again.';\r\n+      }\r\n+      \r\n+      setError(errorMessage);\r\n+    }\r\n+  };\r\n+\r\n   if (loading || isLoading) {\r\n     return (\r\n       <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n         <div className=\"text-center\">\r\n"
                },
                {
                    "date": 1752479956239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -448,8 +448,9 @@\n               onDaySelect={handleDaySelect}\r\n               onDestinationSelect={handleDestinationSelect}\r\n               onDestinationsChange={handleDestinationsChange}\r\n               onLocationSelect={handleDestinationAdd}\r\n+              onDestinationDelete={handleDestinationDelete}\r\n             />\r\n           </div>\r\n \r\n           {/* Right Panel - Map (55% on desktop, 60% on ultra-wide) */}\r\n"
                },
                {
                    "date": 1752480930893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -257,15 +257,9 @@\n       // Clear selected destination if it was the deleted one\r\n       if (selectedDestination?.id === destinationId) {\r\n         setSelectedDestination(null);\r\n       }\r\n-\r\n-      // Show success message\r\n-      setSuccessMessage(`Deleted \"${destinationToDelete.locationName}\" from Day ${destinationToDelete.day}`);\r\n       \r\n-      // Clear success message after 3 seconds\r\n-      setTimeout(() => setSuccessMessage(null), 3000);\r\n-      \r\n       console.log('Destination deleted successfully');\r\n       \r\n     } catch (error) {\r\n       console.error('Error deleting destination:', error);\r\n"
                },
                {
                    "date": 1752480957375,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -221,8 +221,29 @@\n       setIsAddingDestination(false);\r\n     }\r\n   };\r\n \r\n+  // Helper function to renumber destinations sequentially within specified days\r\n+  const renumberDestinationsInDays = (destinations: Destination[], daysToRenumber: number[]): Destination[] => {\r\n+    return destinations.map(dest => {\r\n+      if (daysToRenumber.includes(dest.day)) {\r\n+        // Get all destinations for this day and sort by current order\r\n+        const dayDestinations = destinations\r\n+          .filter(d => d.day === dest.day)\r\n+          .sort((a, b) => (a.orderIndex || 0) - (b.orderIndex || 0));\r\n+        \r\n+        // Find the new sequential index\r\n+        const newIndex = dayDestinations.findIndex(d => d.id === dest.id) + 1;\r\n+        \r\n+        return {\r\n+          ...dest,\r\n+          orderIndex: newIndex\r\n+        };\r\n+      }\r\n+      return dest;\r\n+    });\r\n+  };\r\n+\r\n   const handleDestinationDelete = async (destinationId: string) => {\r\n     try {\r\n       setError(null);\r\n       \r\n@@ -244,16 +265,28 @@\n \r\n       // Delete from database\r\n       await deleteDestination(destinationId);\r\n \r\n-      // Update destinations state\r\n-      setDestinations(prev => prev.filter(d => d.id !== destinationId));\r\n+      // Update destinations state and renumber\r\n+      const updatedDestinations = destinations.filter(d => d.id !== destinationId);\r\n+      const finalDestinations = renumberDestinationsInDays(updatedDestinations, [destinationToDelete.day]);\r\n+      \r\n+      setDestinations(finalDestinations);\r\n \r\n-      // Update tripDays state to remove the destination\r\n-      setTripDays(prev => prev.map(day => ({\r\n-        ...day,\r\n-        destinations: day.destinations.filter(d => d.id !== destinationId)\r\n-      })));\r\n+      // Update tripDays state to remove the destination and renumber remaining ones\r\n+      setTripDays(prev => prev.map(day => {\r\n+        if (day.day === destinationToDelete.day) {\r\n+          const dayDestinations = finalDestinations\r\n+            .filter(d => d.day === day.day)\r\n+            .sort((a, b) => (a.orderIndex || 0) - (b.orderIndex || 0));\r\n+          \r\n+          return {\r\n+            ...day,\r\n+            destinations: dayDestinations\r\n+          };\r\n+        }\r\n+        return day;\r\n+      }));\r\n \r\n       // Clear selected destination if it was the deleted one\r\n       if (selectedDestination?.id === destinationId) {\r\n         setSelectedDestination(null);\r\n"
                }
            ],
            "date": 1752433573907,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams, useRouter } from 'next/navigation';\r\nimport { useAuth } from '@/lib/auth-context';\r\nimport { getTrip } from '@/lib/trip-service';\r\nimport { getTripDestinations } from '@/lib/destination-service';\r\nimport { Trip, Destination, TripDay, getDayColor } from '@/types';\r\nimport { format, parseISO, differenceInDays, addDays } from 'date-fns';\r\nimport Link from 'next/link';\r\nimport TripMap from '@/components/map/TripMap';\r\nimport ItineraryPanel from '@/components/trip/ItineraryPanel';\r\n\r\nexport default function TripDetailPage() {\r\n  const { id } = useParams();\r\n  const router = useRouter();\r\n  const { user, loading } = useAuth();\r\n  const [trip, setTrip] = useState<Trip | null>(null);\r\n  const [destinations, setDestinations] = useState<Destination[]>([]);\r\n  const [tripDays, setTripDays] = useState<TripDay[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [selectedDestination, setSelectedDestination] = useState<Destination | null>(null);\r\n  const [selectedDay, setSelectedDay] = useState<number>(1);\r\n\r\n  // Redirect if not authenticated\r\n  useEffect(() => {\r\n    if (!loading && !user) {\r\n      router.push('/login');\r\n    }\r\n  }, [user, loading, router]);\r\n\r\n  // Load trip and destinations\r\n  useEffect(() => {\r\n    async function loadTripData() {\r\n      if (!id || !user) return;\r\n\r\n      try {\r\n        setIsLoading(true);\r\n        setError(null);\r\n\r\n        // Load trip\r\n        const tripData = await getTrip(id as string);\r\n        if (!tripData) {\r\n          setError('Trip not found');\r\n          return;\r\n        }\r\n\r\n        // Check if user owns this trip\r\n        if (tripData.userId !== user.uid) {\r\n          setError('You do not have permission to view this trip');\r\n          return;\r\n        }\r\n\r\n        setTrip(tripData);\r\n\r\n        // Load destinations\r\n        const destinationsData = await getTripDestinations(id as string);\r\n        setDestinations(destinationsData);\r\n\r\n        // Generate trip days\r\n        const startDate = parseISO(tripData.startDate);\r\n        const endDate = parseISO(tripData.endDate);\r\n        const totalDays = differenceInDays(endDate, startDate) + 1;\r\n\r\n        const days: TripDay[] = [];\r\n        for (let i = 0; i < totalDays; i++) {\r\n          const dayNumber = i + 1;\r\n          const dayDate = addDays(startDate, i);\r\n          const dayDestinations = destinationsData.filter(d => d.day === dayNumber);\r\n          \r\n          days.push({\r\n            day: dayNumber,\r\n            date: format(dayDate, 'yyyy-MM-dd'),\r\n            destinations: dayDestinations,\r\n            color: getDayColor(dayNumber),\r\n          });\r\n        }\r\n\r\n        setTripDays(days);\r\n      } catch (err) {\r\n        console.error('Error loading trip:', err);\r\n        setError('Failed to load trip data');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n\r\n    loadTripData();\r\n  }, [id, user]);\r\n\r\n  // Handle destination selection from map\r\n  const handleDestinationSelect = (destination: Destination) => {\r\n    setSelectedDestination(destination);\r\n    setSelectedDay(destination.day);\r\n  };\r\n\r\n  // Handle day selection from itinerary\r\n  const handleDaySelect = (day: number) => {\r\n    setSelectedDay(day);\r\n    setSelectedDestination(null);\r\n  };\r\n\r\n  if (loading || isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Loading trip...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">Oops!</h2>\r\n          <p className=\"text-gray-600 mb-6\">{error}</p>\r\n          <Link href=\"/dashboard\" className=\"btn-primary\">\r\n            Back to Dashboard\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!trip) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <div className=\"bg-white shadow-sm border-b border-gray-200\">\r\n        <div className=\"max-w-7xl mx-auto px-4 py-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              <Link \r\n                href=\"/dashboard\" \r\n                className=\"text-gray-500 hover:text-gray-700 transition-colors\"\r\n              >\r\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\r\n                </svg>\r\n              </Link>\r\n              <div>\r\n                <h1 className=\"text-2xl font-bold text-gray-900\">{trip.name}</h1>\r\n                <p className=\"text-gray-600 flex items-center space-x-4\">\r\n                  <span className=\"flex items-center space-x-1\">\r\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                    </svg>\r\n                    <span>{trip.location}</span>\r\n                  </span>\r\n                  <span className=\"flex items-center space-x-1\">\r\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n                    </svg>\r\n                    <span>\r\n                      {format(parseISO(trip.startDate), 'MMM d')} - {format(parseISO(trip.endDate), 'MMM d, yyyy')}\r\n                    </span>\r\n                  </span>\r\n                  <span className=\"flex items-center space-x-1\">\r\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                    </svg>\r\n                    <span>{tripDays.length} days</span>\r\n                  </span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center space-x-3\">\r\n              <button className=\"btn-secondary\">\r\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z\" />\r\n                </svg>\r\n                Share\r\n              </button>\r\n              <button className=\"btn-secondary\">\r\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\r\n                </svg>\r\n                Edit Trip\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content - 45%/55% Split */}\r\n      <div className=\"max-w-7xl mx-auto p-4\">\r\n        <div className=\"flex h-[calc(100vh-200px)] gap-4\">\r\n          {/* Left Panel - Itinerary (45%) */}\r\n          <div className=\"w-[45%] bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\">\r\n            <ItineraryPanel\r\n              trip={trip}\r\n              tripDays={tripDays}\r\n              selectedDay={selectedDay}\r\n              selectedDestination={selectedDestination}\r\n              onDaySelect={handleDaySelect}\r\n              onDestinationSelect={handleDestinationSelect}\r\n              onDestinationsChange={setDestinations}\r\n            />\r\n          </div>\r\n\r\n          {/* Right Panel - Map (55%) */}\r\n          <div className=\"w-[55%] bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\">\r\n            <TripMap\r\n              trip={trip}\r\n              destinations={destinations}\r\n              tripDays={tripDays}\r\n              selectedDestination={selectedDestination}\r\n              selectedDay={selectedDay}\r\n              onDestinationSelect={handleDestinationSelect}\r\n              onDestinationAdd={(destination) => {\r\n                setDestinations(prev => [...prev, destination]);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "
        }
    ]
}