{
    "sourceFile": "app/trip/shared/[token]/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1754143597122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754143785666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n   useEffect(() => {\r\n     if (!token) return;\r\n     \r\n     loadSharedTrip();\r\n-  }, [token, user]);\r\n+  }, [token]); // Remove user dependency to avoid reloading when auth state changes\r\n \r\n   const loadSharedTrip = async () => {\r\n     try {\r\n       setLoading(true);\r\n@@ -52,9 +52,10 @@\n         return;\r\n       }\r\n \r\n       // Check if edit permission requires authentication\r\n-      if (tripPermission === 'edit' && !sharedTrip.shareSettings?.allowPublicEdit && !user) {\r\n+      // Only check user auth if we need it, don't wait for auth to complete for view-only trips\r\n+      if (tripPermission === 'edit' && !sharedTrip.shareSettings?.allowPublicEdit && !authLoading && !user) {\r\n         setRequiresAuth(true);\r\n         return;\r\n       }\r\n \r\n@@ -86,12 +87,16 @@\n         });\r\n       }\r\n \r\n       setTripDays(generatedTripDays);\r\n+      \r\n+      // Small delay to ensure components are fully mounted before map initialization\r\n+      setTimeout(() => {\r\n+        setLoading(false);\r\n+      }, 100);\r\n     } catch (error) {\r\n       console.error('Error loading shared trip:', error);\r\n       setError('Failed to load trip. Please try again.');\r\n-    } finally {\r\n       setLoading(false);\r\n     }\r\n   };\r\n \r\n@@ -208,9 +213,9 @@\n       </div>\r\n     );\r\n   }\r\n \r\n-  if (!trip) return null;\r\n+  if (!trip || tripDays.length === 0) return null;\r\n \r\n   const canEdit = permission === 'edit' && (user || trip.shareSettings?.allowPublicEdit);\r\n \r\n   return (\r\n"
                }
            ],
            "date": 1754143597122,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams, useRouter } from 'next/navigation';\r\nimport { Trip, Destination } from '@/types';\r\nimport { getTripByShareToken } from '@/lib/sharing-service';\r\nimport { getTripDestinations } from '@/lib/destination-service';\r\nimport { useAuth } from '@/lib/auth-context';\r\nimport ItineraryPanel from '@/components/trip/ItineraryPanel';\r\nimport TripMap from '@/components/map/TripMap';\r\nimport { TripDay, getDayColor } from '@/types';\r\nimport { format, parseISO, differenceInDays, addDays } from 'date-fns';\r\nimport { \r\n  GlobeAltIcon, \r\n  LockClosedIcon, \r\n  UserIcon,\r\n  CalendarIcon,\r\n  MapPinIcon,\r\n} from '@heroicons/react/24/outline';\r\n\r\nexport default function SharedTripPage() {\r\n  const params = useParams();\r\n  const router = useRouter();\r\n  const { user, loading: authLoading } = useAuth();\r\n  const token = params.token as string;\r\n\r\n  const [trip, setTrip] = useState<Trip | null>(null);\r\n  const [destinations, setDestinations] = useState<Destination[]>([]);\r\n  const [tripDays, setTripDays] = useState<TripDay[]>([]);\r\n  const [permission, setPermission] = useState<'view' | 'edit'>('view');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [requiresAuth, setRequiresAuth] = useState(false);\r\n  const [selectedDestination, setSelectedDestination] = useState<Destination | null>(null);\r\n  const [selectedDay, setSelectedDay] = useState<number>(1);\r\n\r\n  useEffect(() => {\r\n    if (!token) return;\r\n    \r\n    loadSharedTrip();\r\n  }, [token, user]);\r\n\r\n  const loadSharedTrip = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const { trip: sharedTrip, permission: tripPermission } = await getTripByShareToken(token);\r\n      \r\n      if (!sharedTrip) {\r\n        setError('This trip link is invalid or has expired.');\r\n        return;\r\n      }\r\n\r\n      // Check if edit permission requires authentication\r\n      if (tripPermission === 'edit' && !sharedTrip.shareSettings?.allowPublicEdit && !user) {\r\n        setRequiresAuth(true);\r\n        return;\r\n      }\r\n\r\n      setTrip(sharedTrip);\r\n      setPermission(tripPermission);\r\n\r\n      // Load destinations\r\n      const tripDestinations = await getTripDestinations(sharedTrip.id);\r\n      setDestinations(tripDestinations);\r\n\r\n      // Generate trip days\r\n      const startDate = parseISO(sharedTrip.startDate);\r\n      const endDate = parseISO(sharedTrip.endDate);\r\n      const totalDays = differenceInDays(endDate, startDate) + 1;\r\n\r\n      const generatedTripDays: TripDay[] = [];\r\n      for (let i = 0; i < totalDays; i++) {\r\n        const dayNumber = i + 1;\r\n        const currentDate = addDays(startDate, i);\r\n        const dayDestinations = tripDestinations\r\n          .filter(dest => dest.day === dayNumber)\r\n          .sort((a, b) => a.orderIndex - b.orderIndex);\r\n\r\n        generatedTripDays.push({\r\n          day: dayNumber,\r\n          date: format(currentDate, 'yyyy-MM-dd'),\r\n          color: getDayColor(dayNumber),\r\n          destinations: dayDestinations\r\n        });\r\n      }\r\n\r\n      setTripDays(generatedTripDays);\r\n    } catch (error) {\r\n      console.error('Error loading shared trip:', error);\r\n      setError('Failed to load trip. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDestinationsChange = (newDestinations: Destination[]) => {\r\n    if (permission !== 'edit') return;\r\n    \r\n    setDestinations(newDestinations);\r\n    // Regenerate trip days\r\n    regenerateTripDays(newDestinations);\r\n  };\r\n\r\n  const regenerateTripDays = (destinations: Destination[]) => {\r\n    if (!trip) return;\r\n\r\n    const startDate = parseISO(trip.startDate);\r\n    const endDate = parseISO(trip.endDate);\r\n    const totalDays = differenceInDays(endDate, startDate) + 1;\r\n\r\n    const updatedTripDays: TripDay[] = [];\r\n    for (let i = 0; i < totalDays; i++) {\r\n      const dayNumber = i + 1;\r\n      const currentDate = addDays(startDate, i);\r\n      const dayDestinations = destinations\r\n        .filter(dest => dest.day === dayNumber)\r\n        .sort((a, b) => a.orderIndex - b.orderIndex);\r\n\r\n      updatedTripDays.push({\r\n        day: dayNumber,\r\n        date: format(currentDate, 'yyyy-MM-dd'),\r\n        color: getDayColor(dayNumber),\r\n        destinations: dayDestinations\r\n      });\r\n    }\r\n\r\n    setTripDays(updatedTripDays);\r\n  };\r\n\r\n  const handleDestinationSelect = (destination: Destination) => {\r\n    setSelectedDestination(destination);\r\n  };\r\n\r\n  const handleDaySelect = (day: number) => {\r\n    setSelectedDay(day);\r\n  };\r\n\r\n  const handleLocationSelect = (destination: Destination) => {\r\n    // Add destination to the trip\r\n    const newDestinations = [...destinations, destination];\r\n    handleDestinationsChange(newDestinations);\r\n  };\r\n\r\n  const handleDestinationDelete = (destinationId: string) => {\r\n    const filteredDestinations = destinations.filter(dest => dest.id !== destinationId);\r\n    handleDestinationsChange(filteredDestinations);\r\n  };\r\n\r\n  if (loading || authLoading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"w-12 h-12 border-4 border-blue-200 border-t-blue-600 rounded-full animate-spin mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Loading shared trip...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center max-w-md\">\r\n          <div className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n            <LockClosedIcon className=\"w-8 h-8 text-red-600\" />\r\n          </div>\r\n          <h1 className=\"text-xl font-semibold text-gray-900 mb-2\">Trip Not Available</h1>\r\n          <p className=\"text-gray-600 mb-6\">{error}</p>\r\n          <button\r\n            onClick={() => router.push('/')}\r\n            className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\r\n          >\r\n            Go Home\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (requiresAuth) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center max-w-md\">\r\n          <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n            <UserIcon className=\"w-8 h-8 text-blue-600\" />\r\n          </div>\r\n          <h1 className=\"text-xl font-semibold text-gray-900 mb-2\">Authentication Required</h1>\r\n          <p className=\"text-gray-600 mb-6\">\r\n            This trip allows editing but requires you to be logged in. Please sign in to continue.\r\n          </p>\r\n          <div className=\"space-y-3\">\r\n            <button\r\n              onClick={() => router.push('/login')}\r\n              className=\"w-full px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\r\n            >\r\n              Sign In\r\n            </button>\r\n            <button\r\n              onClick={() => router.push('/register')}\r\n              className=\"w-full px-6 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300\"\r\n            >\r\n              Create Account\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!trip) return null;\r\n\r\n  const canEdit = permission === 'edit' && (user || trip.shareSettings?.allowPublicEdit);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <div className=\"bg-white border-b border-gray-200 px-6 py-4\">\r\n        <div className=\"max-w-7xl mx-auto\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex-1\">\r\n              <div className=\"flex items-center gap-3 mb-2\">\r\n                <h1 className=\"text-2xl font-bold text-gray-900\">{trip.name}</h1>\r\n                <div className=\"flex items-center gap-1 px-2 py-1 bg-gray-100 rounded-full text-xs\">\r\n                  {permission === 'edit' ? (\r\n                    <>\r\n                      <LockClosedIcon className=\"w-3 h-3 text-blue-600\" />\r\n                      <span className=\"text-blue-600\">Can Edit</span>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <GlobeAltIcon className=\"w-3 h-3 text-green-600\" />\r\n                      <span className=\"text-green-600\">View Only</span>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"flex items-center gap-6 text-sm text-gray-600\">\r\n                <div className=\"flex items-center gap-1\">\r\n                  <MapPinIcon className=\"w-4 h-4\" />\r\n                  {trip.location}\r\n                </div>\r\n                <div className=\"flex items-center gap-1\">\r\n                  <CalendarIcon className=\"w-4 h-4\" />\r\n                  {new Date(trip.startDate).toLocaleDateString()} - {new Date(trip.endDate).toLocaleDateString()}\r\n                </div>\r\n              </div>\r\n              \r\n              {trip.description && (\r\n                <p className=\"text-gray-600 mt-2\">{trip.description}</p>\r\n              )}\r\n            </div>\r\n\r\n            {!canEdit && (\r\n              <div className=\"text-center\">\r\n                <p className=\"text-sm text-gray-500 mb-2\">Want to create your own trips?</p>\r\n                <button\r\n                  onClick={() => router.push('/register')}\r\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 text-sm\"\r\n                >\r\n                  Sign Up Free\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"flex h-[calc(100vh-120px)]\">\r\n        {/* Itinerary Panel */}\r\n        <div className=\"w-1/2 bg-white border-r border-gray-200\">\r\n          <ItineraryPanel\r\n            trip={trip}\r\n            tripDays={tripDays}\r\n            selectedDay={selectedDay}\r\n            selectedDestination={selectedDestination}\r\n            onDaySelect={handleDaySelect}\r\n            onDestinationSelect={handleDestinationSelect}\r\n            onDestinationsChange={canEdit ? handleDestinationsChange : () => {}}\r\n            onLocationSelect={canEdit ? handleLocationSelect : () => {}}\r\n            onDestinationDelete={canEdit ? handleDestinationDelete : () => {}}\r\n          />\r\n        </div>\r\n\r\n        {/* Map Panel */}\r\n        <div className=\"w-1/2\">\r\n          <TripMap\r\n            trip={trip}\r\n            destinations={destinations}\r\n            tripDays={tripDays}\r\n            selectedDestination={selectedDestination}\r\n            selectedDay={selectedDay}\r\n            onDestinationSelect={handleDestinationSelect}\r\n            onDestinationAdd={canEdit ? handleLocationSelect : () => {}}\r\n            isAddingDestination={false}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Footer for shared view */}\r\n      <div className=\"bg-white border-t border-gray-200 px-6 py-3\">\r\n        <div className=\"max-w-7xl mx-auto flex items-center justify-between text-sm text-gray-500\">\r\n          <div>\r\n            Shared trip via <span className=\"font-medium\">Travel Planner</span>\r\n          </div>\r\n          <div>\r\n            {permission === 'view' ? 'Read-only access' : 'Collaborative editing enabled'}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"
        }
    ]
}