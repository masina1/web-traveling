{
    "sourceFile": "Trip_Planner_Spec.txt",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1752580938954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752581054225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -242,4 +242,10 @@\n - On mobile, the itinerary (left panel) takes the full screen by default.\n - A toggle button allows opening/closing the itinerary view.\n - The map is not persistently visible but can be opened as a full-screen overlay.\n - Design must prioritize tap accuracy and simplified navigation.\n+\n+---\n+\n+[2025-07-14] Layout and Scrollbar Update:\n+- The itinerary and map panels now use a true 50/50 split (left: itinerary, right: map) on desktop, with no container wall or margin between them.\n+- The itinerary panel uses a custom scrollbar at the far right edge of the screen, synced with its scroll position, and the native scrollbar is hidden for a seamless look.\n"
                }
            ],
            "date": 1752580938954,
            "name": "Commit-0",
            "content": "\n🌍 Overview (PO Vision)\nSuggested or added locations must include an accurate address to ensure clarity when navigating to that destination. This avoids confusion at the time of travel and ensures the location shown in the itinerary and map is the precise one the user expects.\nThe goal is to create a clean, responsive web application similar to Wanderlog, but simplified. The focus is on helping users:\nLog in securely\nCreate and organize multi-day trips\nAdd detailed destinations with time blocks\nView destinations on an interactive, color-coded map\nGet suggestions (with images) based on destination\n💡 Feature Set (User-Facing Stories & Details)\n🔑 Authentication\nUsers can register/login/logout using email + password\nRedirect to dashboard after login\n🛍️ Trip Management\nOnly authenticated users can view their own trips\nTrips are private by default\nUsers can explicitly share a trip with others (read-only link)\nIf a user makes a trip public, anyone can view it in read-only mode\nCreate a new trip with name, start/end date, and notes\nView a list of trips on the dashboard\nClick a trip to go to its itinerary\n🌐 Destination Planner\nLocation input uses autocomplete (e.g., typing “team labs” shows “TeamLabs Planets”, “TeamLabs Borderless”, etc.) with up to 5 intelligent suggestions\nUsers can also add destinations without assigning them to a day or time — only the location name is required\nThese freeform destinations will appear in a separate section or as part of a flexible list\nFor each day, add/edit/remove destinations\nEach destination includes:\nLocation name (with autocomplete)\nStart time / End time (HH:MM)\nNotes\nDestinations auto-sort by time\nNotes\n📍 Map Integration\nMap shows all trip destinations as pins\nPins are:\nNumbered in order (1, 2, 3…)\nColor-coded by day (consistent visual grouping)\nClicking a pin highlights the itinerary item and opens a bottom pane in the right panel with:\nDestination name\nDescription/notes\nImage preview (if available)\nClicking an itinerary item zooms to the map pin\nPins are:\nClicking a pin highlights the itinerary item\n🔍 Suggestions Panel\nBased on destination, show relevant places:\nFood, Attractions, Landmarks\nEach suggestion includes:\nImage (from Unsplash or Google Places)\nName, category, brief description\n➕ Add button to include it in itinerary\nUI toggle for List vs Compact view\n📎 Optional\nExport trip to PDF or shareable link\nDrag to reorder destinations within a day\n🎨 Visual Layout (UI Expectations)\nSplit View Design (Desktop):\nLeft Panel (45%)\nItinerary by days (collapsible sections)\nDestinations with times and notes\nSuggestions section (below itinerary)\nToggle: List View / Compact View\nRight Panel (55%)\nInteractive map with:\nPins numbered in order of visit (shown both on the map and in the itinerary list, with matching color codes based on the day)\nColor-coded by day (e.g., Day 1 = Purple, Day 2 = Blue)\nRoute lines connecting pins\nClicking a list item centers/highlights the pin\nClicking a pin scrolls/highlights the list item\nMobile View:\nStacked view\nTabs or swipeable sections: Itinerary / Map / Suggestions\n⚖️ Technical Build Plan (Developer Reference)\nStack Recommendation\n🚜 Step-by-Step Dev Tasks\n1. Project Setup\nInitialize Git repo\nCreate folders: /frontend, /backend, /assets\nAdd README, .env.example\n2. Auth Flow\nEmail/password auth with Firebase/Auth0\nRedirect to /dashboard upon login\nProtect routes\n3. Trip Dashboard\nList user’s trips\n➕ New trip modal\nLink to edit/view trip\n4. Trip Itinerary Page\n45/55 layout split\nDay sections on left\nMap component on right\nState shared across both\n5. Destination CRUD\nAdd destination with: location, time, notes\nStore in DB by trip & day\nAuto-sort destinations\n6. Map Integration\nDisplay markers with sequence & color\nDraw route line (optional)\nList/map sync behavior\n7. Suggestion Engine\nFetch Google Places / Unsplash data\nRender card grid or compact list\n➕ Add to itinerary\n8. UI Polish\nTailwind for spacing/colors/rounded elements\nResponsive mobile-first design\n9. Local Setup (Windows)\nNode.js / Firebase CLI / Git required\nRun with npm run dev locally\nProvide .env with API keys\n10. Deployment (Later)\nUse Vercel or Firebase Hosting for production\nUpdated Feature Roadmap\n✅ MVP (v1.0)\n- Auth (Login/Register)\n- Create trip (title, dates, location)\n- Add destinations per day\n- Autocomplete with address\n- Per-day itinerary with time (optional)\n- Map with pins, color-coded by day\n- Map/list sync (click → scroll/zoom)\n- Suggestions shown under each day\n- Local setup (Windows)\n🔜 v1.1 – Enhanced Usability\n- Freeform destinations (no time)\n- Suggestions show popular places if no destinations exist\n- Suggestions based on first pin location (gray pins)\n- Suggestions always appear below the day section\n- Drag-and-drop destinations (no confirmation)\n- Public trip view (read-only link)\n🔮 Future (v2.0 and beyond)\n- Export to PDF\n- Change history log: “Who moved/added what”\n- Route optimization (walkable flow)\n- Offline support\n- Save favorite locations\nUser Flow Scenarios\n📌 6. User Starts a Trip Without Adding Any Destinations\n- Creates trip: “Trip to Kyoto” → selects country/city.\n- Sees empty day sections for July 3–5.\n- Below Day 1 section, system shows: 'Popular places in Kyoto' (Fushimi Inari, Gion, etc.)\n- User adds “Fushimi Inari” as first stop → pin appears.\n- Suggestions update: nearby temples, shrines, cafes.\n🧑‍🤝‍🧑 7. Shared Trip, Team Planning\n- PO shares a public read-only trip link with team.\n- Team sees: Itinerary view (non-editable), Pins and notes, Change history (v2.0 feature)\n- Later: team wants editable collaboration (not MVP yet).\n🧠 8. User Edits a Freeform Destination Into a Timed One\n- User adds “Shinjuku Gyoen” without time.\n- Appears in “Ungrouped” section.\n- Later, clicks “Add time” → enters 14:00–16:00.\n- Destination is moved to the correct day list (sorted by time).\n- Pin updates number, color stays the same.\n🧲 9. User Views Suggestions After Adding First Pin\n- User adds “Akihabara” to Day 2 at 10:00.\n- Gray suggestion pins appear on the map.\n- Suggestion section under Day 2 now shows: “Don Quijote,” “Gachapon Hall,” “Kanda Shrine”\n- User clicks “Add” on 2 places → they're inserted in order.\n- Gray pin becomes colored and numbered.\nProduct Specification: Simple Trip Planner Web App\n✅ Summary for Developer\nEverything should work locally on Windows using localhost:3000\nFollow visual and functional expectations closely\nPrioritize map + itinerary sync, color-coded logic, and suggestion usability\nExpect feedback iterations after first MVP build\n🧾 API & Service Notes\n🔹 Google Maps/Places API offers $200/month in free usage. This is sufficient for most MVP and personal use cases. A billing account is required to activate APIs, but you won’t be charged unless you exceed limits.\n🔹 Firebase Spark Plan is free for small-scale apps:\n- 10k monthly logins\n- 50k Firestore reads/day\n- 10GB hosting bandwidth/month\n- No card required unless upgrading to Blaze Plan\n\n\nComponent & Style Notes\n- Design should be clean and modern, but lightweight.\n- Use rounded buttons with bold text for primary actions.\n- Apply soft shadows on cards and interactive elements.\n- Suggestion cards include: image, title, category, and an “Add” button.\n- Use consistent spacing and margin/padding to ensure readability.\n- Use 24-hour format for time inputs.\n\n\nPermissions & Collaboration Logic\n- Trips can be shared via a unique link.\n- Anyone with the link can view or edit the shared trip.\n- No owner/admin distinction needed at this stage.\n- All shared users can add/edit/remove destinations equally.\n- Potential for role control in future if delete/archive becomes sensitive.\n\n\nData Model Overview\nTrip\n\n{\n  \"id\": \"trip_001\",\n  \"userId\": \"user_abc\",\n  \"name\": \"Japan Summer 2025\",\n  \"location\": \"Tokyo, Japan\",\n  \"startDate\": \"2025-07-01\",\n  \"endDate\": \"2025-07-05\",\n  \"isPublic\": false\n}\n\nDestination\n\n{\n  \"id\": \"dest_001\",\n  \"tripId\": \"trip_001\",\n  \"locationName\": \"Shibuya Sky\",\n  \"address\": \"Shibuya City, Tokyo, Japan\",\n  \"lat\": 35.6595,\n  \"lng\": 139.7005,\n  \"day\": 1,\n  \"startTime\": \"14:00\",\n  \"endTime\": \"15:30\",\n  \"notes\": \"Buy tickets in advance\"\n}\n\nUser\n\n{\n  \"id\": \"user_abc\",\n  \"email\": \"user@example.com\",\n  \"displayName\": \"Alice\",\n  \"sharedTrips\": [\"trip_001\"]\n}\n\n\n\nTrip Lifecycle Summary\n1. User creates a new trip by entering name, dates, and destination.\n2. App generates day sections based on selected date range.\n3. User adds destinations to one or more days.\n4. Pins appear on the map and are color-coded by day.\n5. Suggestions are shown automatically based on the location.\n6. Trip can be shared with others or exported later.\n\n\nMobile Behavior Notes\n- On mobile, the itinerary (left panel) takes the full screen by default.\n- A toggle button allows opening/closing the itinerary view.\n- The map is not persistently visible but can be opened as a full-screen overlay.\n- Design must prioritize tap accuracy and simplified navigation.\n"
        }
    ]
}